<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.8.5 on darwin)" generated="20200831 10:00:03.508" rpa="false">
<suite id="s1" name="Connector Tests" source="/Users/konstantinkomovits/PoT/connector-entsoe/robottests/connector_tests.robot">
<test id="s1-t1" name="fetch, 200">
<kw name="Get Body">
<assign>
<var>${body}</var>
</assign>
<kw name="Copy Dictionary" library="Collections">
<doc>Returns a copy of the given dictionary.</doc>
<arguments>
<arg>${BROKER_BODY}</arg>
<arg>deepcopy=True</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200831 10:00:03.753" level="INFO">${body} = {'timestamp': '2018-11-01T12:00:00+00:00', 'productCode': 'entsoe-electricity-price-product-code', 'parameters': {'period': '2020-06-08T13:00Z/2020-06-09T22:00Z', 'targetObject': '10YFI-1--------U'}}</msg>
<status status="PASS" starttime="20200831 10:00:03.752" endtime="20200831 10:00:03.753"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>time_zone=UTC</arg>
<arg>result_format=%Y-%m-%dT%H:%M:%S+00:00</arg>
</arguments>
<assign>
<var>${now}</var>
</assign>
<msg timestamp="20200831 10:00:03.753" level="INFO">${now} = 2020-08-31T07:00:03+00:00</msg>
<status status="PASS" starttime="20200831 10:00:03.753" endtime="20200831 10:00:03.753"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${body}</arg>
<arg>timestamp</arg>
<arg>${now}</arg>
</arguments>
<status status="PASS" starttime="20200831 10:00:03.753" endtime="20200831 10:00:03.754"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${body}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20200831 10:00:03.754" endtime="20200831 10:00:03.754"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.dumps(${body})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${json_string}</var>
</assign>
<msg timestamp="20200831 10:00:03.754" level="INFO">${json_string} = {"timestamp": "2020-08-31T07:00:03+00:00", "productCode": "entsoe-electricity-price-product-code", "parameters": {"period": "2020-06-08T13:00Z/2020-06-09T22:00Z", "targetObject": "10YFI-1--------U"}}</msg>
<status status="PASS" starttime="20200831 10:00:03.754" endtime="20200831 10:00:03.754"></status>
</kw>
<msg timestamp="20200831 10:00:03.754" level="INFO">${body} = {"timestamp": "2020-08-31T07:00:03+00:00", "productCode": "entsoe-electricity-price-product-code", "parameters": {"period": "2020-06-08T13:00Z/2020-06-09T22:00Z", "targetObject": "10YFI-1--------U"}}</msg>
<status status="PASS" starttime="20200831 10:00:03.752" endtime="20200831 10:00:03.754"></status>
</kw>
<kw name="Fetch Data Product">
<arguments>
<arg>${body}</arg>
</arguments>
<kw name="Calculate Pot Signature" library="PoTLib">
<arguments>
<arg>${body}</arg>
<arg>${CLIENT_SECRET}</arg>
</arguments>
<assign>
<var>${signature}</var>
</assign>
<msg timestamp="20200831 10:00:03.755" level="INFO">1HVVli3PxhITigD+/+eGcse3efR5dQCxKoUij8HdvCo=</msg>
<msg timestamp="20200831 10:00:03.755" level="INFO">${signature} = 1HVVli3PxhITigD+/+eGcse3efR5dQCxKoUij8HdvCo=</msg>
<status status="PASS" starttime="20200831 10:00:03.755" endtime="20200831 10:00:03.755"></status>
</kw>
<kw name="Set Headers" library="REST">
<tags>
<tag>settings</tag>
</tags>
<doc>*Sets new request headers or updates the existing.*</doc>
<arguments>
<arg>{"x-pot-signature": "${signature}", "x-app-token": "${APP_TOKEN}"}</arg>
</arguments>
<status status="PASS" starttime="20200831 10:00:03.755" endtime="20200831 10:00:03.755"></status>
</kw>
<kw name="Post" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a POST request to the endpoint.*</doc>
<arguments>
<arg>/translator/v1/fetch</arg>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200831 10:00:03.756" endtime="20200831 10:00:04.180"></status>
</kw>
<kw name="Output Schema" library="REST">
<tags>
<tag>I/O</tag>
</tags>
<doc>*Outputs JSON Schema to terminal or a file.*</doc>
<arguments>
<arg>response body</arg>
</arguments>
<msg timestamp="20200831 10:00:04.181" level="INFO">
{
    "type": "object",
    "properties": {
        "@context": {
            "type": "string",
            "default": "https://standards.oftrust.net/v2/Context/DataProductOutput/Forecast/Price/Electricity/"
        },
        "data": {
            "type": "object",
            "properties": {
                "forecasts": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "@type": {
                                "type": "string"
                            },
                            "period": {
                                "type": "string"
                            },
                            "pricePlans": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "@type": {
                                            "type": "string"
                                        },
                                        "currency": {
                                            "type": "string"
                                        },
                                        "period": {
                                            "type": "string"
                                        },
                                        "rate": {
                                            "type": "number"
                                        }
                                    },
                                    "required": [
                                        "@type",
                                        "currency",
                                        "period",
                                        "rate"
                                    ]
                                }
                            }
                        },
                        "required": [
                            "@type",
                            "period",
                            "pricePlans"
                        ]
                    },
                    "default": [
                        {
                            "@type": "ForecastElectricityPriceMWH",
                            "period": "07.06.2020/09.06.2020",
                            "pricePlans": [
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "07.06.2020T22:00/1h",
                                    "rate": 3.68
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "07.06.2020T23:00/1h",
                                    "rate": 2.85
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T00:00/1h",
                                    "rate": 2.95
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T01:00/1h",
                                    "rate": 3.15
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T02:00/1h",
                                    "rate": 4.58
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T03:00/1h",
                                    "rate": 7.06
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T04:00/1h",
                                    "rate": 32.65
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T05:00/1h",
                                    "rate": 42.95
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T06:00/1h",
                                    "rate": 41.24
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T07:00/1h",
                                    "rate": 38.9
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T08:00/1h",
                                    "rate": 35.1
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T09:00/1h",
                                    "rate": 35.86
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T10:00/1h",
                                    "rate": 33.81
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T11:00/1h",
                                    "rate": 32.72
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T12:00/1h",
                                    "rate": 30.94
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T13:00/1h",
                                    "rate": 30
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T14:00/1h",
                                    "rate": 29.42
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T15:00/1h",
                                    "rate": 33.31
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T16:00/1h",
                                    "rate": 38.85
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T17:00/1h",
                                    "rate": 38.65
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T18:00/1h",
                                    "rate": 35.23
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T19:00/1h",
                                    "rate": 34.6
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T20:00/1h",
                                    "rate": 32.26
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T21:00/1h",
                                    "rate": 11.04
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T22:00/1h",
                                    "rate": 5.33
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T23:00/1h",
                                    "rate": 3.81
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T00:00/1h",
                                    "rate": 3.34
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T01:00/1h",
                                    "rate": 3.11
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T02:00/1h",
                                    "rate": 3.64
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T03:00/1h",
                                    "rate": 7.21
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T04:00/1h",
                                    "rate": 33.43
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T05:00/1h",
                                    "rate": 47.74
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T06:00/1h",
                                    "rate": 55.78
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T07:00/1h",
                                    "rate": 55.67
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T08:00/1h",
                                    "rate": 54.6
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T09:00/1h",
                                    "rate": 55.23
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T10:00/1h",
                                    "rate": 55.27
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T11:00/1h",
                                    "rate": 40.07
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T12:00/1h",
                                    "rate": 36.39
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T13:00/1h",
                                    "rate": 33.49
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T14:00/1h",
                                    "rate": 33.76
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T15:00/1h",
                                    "rate": 41.61
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T16:00/1h",
                                    "rate": 45.21
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T17:00/1h",
                                    "rate": 48.07
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T18:00/1h",
                                    "rate": 42.06
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T19:00/1h",
                                    "rate": 36.57
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T20:00/1h",
                                    "rate": 18.97
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T21:00/1h",
                                    "rate": 8.38
                                }
                            ]
                        }
                    ]
                }
            },
            "required": [
                "forecasts"
            ]
        },
        "signature": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string",
                    "default": "RsaSignature2018"
                },
                "created": {
                    "type": "string",
                    "default": "2020-08-31T10:00:04+03:00"
                },
                "creator": {
                    "type": "string",
                    "default": "http://localhost:8080/entsoe/translator/v1/public.key"
                },
                "signatureValue": {
                    "type": "string",
                    "default": "SW8VqGtXvzqHDO1+qAoisHGYvCGQDJrnMvWsQuBRYjSYiMBJ34iQMHgwUWO9MsKhNMAFqXGiuH2H25tqVcckDJ9yWia3xeo8OBHEauBK4Fr40D45t7EmrGjh1bHnHZ5LQwoySzdQ73psahk0Rra1ELF+aOlabPR6j5bNJRBT4k9GSi9VDD96d4AUEIrmqDZxEERp4T5HTBUgqrku9RboBnxJ096OwOGRP+Od175dHtUBF8YU3ClnkAaW4ams34juljm59WUlHlO0xnTLbibSDvgfjF8pbwtpUUfJsqha0fKv7osq09ShsvQgjTpSvR4uV0gzc4oStvbHvlxSWoh+1VBVBjI9lBeBh5S0UTsPuWKgX4Q+ujC6ZxYssRGsbvQuXnUZ+whzo6vekWEvr6VSa4XUTr5XKDclwVYLy0Pb1KqkRnvAyGSfHKYq7N73dJCyUU0SaxXcZckuvIjNGkRkAS16p+yAjMiCTlKkXoZyo6p7CJVDsKPZVxxKzzSP3V35lf7ABg32M59P52AcNDsH67bl40/2wN553KJ26xkir8D2Edh7WIomHs25eiOMru2UdX/JMzLLS9B+P0qBnaqxxNowLOsaaVblW1lbB4upzzXZm9IR8/VSwkGrqgkUeBh8FsDe+iB4kqClTIYCNLAv38hIfBxmctTBCAsDhPpPGKI="
                }
            },
            "required": [
                "created",
                "creator",
                "signatureValue",
                "type"
            ]
        }
    },
    "required": [
        "@context",
        "data",
        "signature"
    ]
}</msg>
<status status="PASS" starttime="20200831 10:00:04.180" endtime="20200831 10:00:04.196"></status>
</kw>
<status status="PASS" starttime="20200831 10:00:03.755" endtime="20200831 10:00:04.196"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response status</arg>
<arg>200</arg>
</arguments>
<status status="PASS" starttime="20200831 10:00:04.196" endtime="20200831 10:00:04.197"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body @context</arg>
<arg>https://standards.oftrust.net/v2/Context/DataProductOutput/Forecast/Price/Electricity/</arg>
</arguments>
<status status="PASS" starttime="20200831 10:00:04.197" endtime="20200831 10:00:04.197"></status>
</kw>
<kw name="Object" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON object.*</doc>
<arguments>
<arg>response body data</arg>
</arguments>
<status status="PASS" starttime="20200831 10:00:04.197" endtime="20200831 10:00:04.199"></status>
</kw>
<kw name="Array" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON array.*</doc>
<arguments>
<arg>response body data forecasts</arg>
</arguments>
<status status="PASS" starttime="20200831 10:00:04.199" endtime="20200831 10:00:04.202"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body data forecasts 0 @type</arg>
<arg>ForecastElectricityPriceMWH</arg>
</arguments>
<status status="PASS" starttime="20200831 10:00:04.203" endtime="20200831 10:00:04.204"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body data forecasts 0 period</arg>
<arg>07.06.2020/09.06.2020</arg>
</arguments>
<status status="PASS" starttime="20200831 10:00:04.204" endtime="20200831 10:00:04.205"></status>
</kw>
<kw name="Array" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON array.*</doc>
<arguments>
<arg>response body data forecasts 0 pricePlans</arg>
</arguments>
<status status="PASS" starttime="20200831 10:00:04.205" endtime="20200831 10:00:04.207"></status>
</kw>
<kw name="Object" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON object.*</doc>
<arguments>
<arg>response body data forecasts 0 pricePlans 0</arg>
<arg>{"@type": "pricePlan","currency": "EUR","period": "07.06.2020T22:00/1h","rate": 3.68}</arg>
</arguments>
<status status="PASS" starttime="20200831 10:00:04.207" endtime="20200831 10:00:04.209"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body data forecasts 0 pricePlans 0 @type</arg>
<arg>pricePlan</arg>
</arguments>
<status status="PASS" starttime="20200831 10:00:04.209" endtime="20200831 10:00:04.210"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body data forecasts 0 pricePlans 0 currency</arg>
<arg>EUR</arg>
</arguments>
<status status="PASS" starttime="20200831 10:00:04.210" endtime="20200831 10:00:04.211"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body data forecasts 0 pricePlans 0 period</arg>
<arg>07.06.2020T22:00/1h</arg>
</arguments>
<status status="PASS" starttime="20200831 10:00:04.211" endtime="20200831 10:00:04.212"></status>
</kw>
<kw name="Number" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON number.*</doc>
<arguments>
<arg>response body data forecasts 0 pricePlans 0 rate</arg>
<arg>3.68</arg>
</arguments>
<status status="PASS" starttime="20200831 10:00:04.212" endtime="20200831 10:00:04.213"></status>
</kw>
<status status="PASS" starttime="20200831 10:00:03.752" endtime="20200831 10:00:04.213" critical="yes"></status>
</test>
<test id="s1-t2" name="fetch, 422, Missing data for parameters required field">
<kw name="Get Body">
<assign>
<var>${body}</var>
</assign>
<kw name="Copy Dictionary" library="Collections">
<doc>Returns a copy of the given dictionary.</doc>
<arguments>
<arg>${BROKER_BODY}</arg>
<arg>deepcopy=True</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200831 10:00:04.215" level="INFO">${body} = {'timestamp': '2018-11-01T12:00:00+00:00', 'productCode': 'entsoe-electricity-price-product-code', 'parameters': {'period': '2020-06-08T13:00Z/2020-06-09T22:00Z', 'targetObject': '10YFI-1--------U'}}</msg>
<status status="PASS" starttime="20200831 10:00:04.214" endtime="20200831 10:00:04.215"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>time_zone=UTC</arg>
<arg>result_format=%Y-%m-%dT%H:%M:%S+00:00</arg>
</arguments>
<assign>
<var>${now}</var>
</assign>
<msg timestamp="20200831 10:00:04.215" level="INFO">${now} = 2020-08-31T07:00:04+00:00</msg>
<status status="PASS" starttime="20200831 10:00:04.215" endtime="20200831 10:00:04.215"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${body}</arg>
<arg>timestamp</arg>
<arg>${now}</arg>
</arguments>
<status status="PASS" starttime="20200831 10:00:04.215" endtime="20200831 10:00:04.215"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${body}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20200831 10:00:04.215" endtime="20200831 10:00:04.215"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.dumps(${body})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${json_string}</var>
</assign>
<msg timestamp="20200831 10:00:04.216" level="INFO">${json_string} = {"timestamp": "2020-08-31T07:00:04+00:00", "productCode": "entsoe-electricity-price-product-code", "parameters": {"period": "2020-06-08T13:00Z/2020-06-09T22:00Z", "targetObject": "10YFI-1--------U"}}</msg>
<status status="PASS" starttime="20200831 10:00:04.216" endtime="20200831 10:00:04.216"></status>
</kw>
<msg timestamp="20200831 10:00:04.216" level="INFO">${body} = {"timestamp": "2020-08-31T07:00:04+00:00", "productCode": "entsoe-electricity-price-product-code", "parameters": {"period": "2020-06-08T13:00Z/2020-06-09T22:00Z", "targetObject": "10YFI-1--------U"}}</msg>
<status status="PASS" starttime="20200831 10:00:04.214" endtime="20200831 10:00:04.216"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads('''${body}''')</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200831 10:00:04.216" level="INFO">${body} = {'timestamp': '2020-08-31T07:00:04+00:00', 'productCode': 'entsoe-electricity-price-product-code', 'parameters': {'period': '2020-06-08T13:00Z/2020-06-09T22:00Z', 'targetObject': '10YFI-1--------U'}}</msg>
<status status="PASS" starttime="20200831 10:00:04.216" endtime="20200831 10:00:04.217"></status>
</kw>
<kw name="Pop From Dictionary" library="Collections">
<doc>Pops the given ``key`` from the ``dictionary`` and returns its value.</doc>
<arguments>
<arg>${body}</arg>
<arg>parameters</arg>
</arguments>
<status status="PASS" starttime="20200831 10:00:04.217" endtime="20200831 10:00:04.217"></status>
</kw>
<kw name="Fetch Data Product">
<arguments>
<arg>${body}</arg>
</arguments>
<kw name="Calculate Pot Signature" library="PoTLib">
<arguments>
<arg>${body}</arg>
<arg>${CLIENT_SECRET}</arg>
</arguments>
<assign>
<var>${signature}</var>
</assign>
<msg timestamp="20200831 10:00:04.217" level="INFO">Z1zw4YvX04ppfRKmzglzjntxdghkMPn9Cfzcv7UAw5g=</msg>
<msg timestamp="20200831 10:00:04.218" level="INFO">${signature} = Z1zw4YvX04ppfRKmzglzjntxdghkMPn9Cfzcv7UAw5g=</msg>
<status status="PASS" starttime="20200831 10:00:04.217" endtime="20200831 10:00:04.218"></status>
</kw>
<kw name="Set Headers" library="REST">
<tags>
<tag>settings</tag>
</tags>
<doc>*Sets new request headers or updates the existing.*</doc>
<arguments>
<arg>{"x-pot-signature": "${signature}", "x-app-token": "${APP_TOKEN}"}</arg>
</arguments>
<status status="PASS" starttime="20200831 10:00:04.218" endtime="20200831 10:00:04.218"></status>
</kw>
<kw name="Post" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a POST request to the endpoint.*</doc>
<arguments>
<arg>/translator/v1/fetch</arg>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200831 10:00:04.218" endtime="20200831 10:00:04.223"></status>
</kw>
<kw name="Output Schema" library="REST">
<tags>
<tag>I/O</tag>
</tags>
<doc>*Outputs JSON Schema to terminal or a file.*</doc>
<arguments>
<arg>response body</arg>
</arguments>
<msg timestamp="20200831 10:00:04.223" level="INFO">
{
    "type": "object",
    "properties": {
        "error": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "integer",
                    "default": 422
                },
                "message": {
                    "type": "object",
                    "properties": {
                        "parameters": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "default": [
                                "Missing data for required field."
                            ]
                        },
                        "parameters.targetObject": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "default": [
                                "Missing data for required field."
                            ]
                        },
                        "parameters.period": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "default": [
                                "Missing data for required field."
                            ]
                        }
                    },
                    "required": [
                        "parameters",
                        "parameters.period",
                        "parameters.targetObject"
                    ]
                }
            },
            "required": [
                "message",
                "status"
            ]
        }
    },
    "required": [
        "error"
    ]
}</msg>
<status status="PASS" starttime="20200831 10:00:04.223" endtime="20200831 10:00:04.225"></status>
</kw>
<status status="PASS" starttime="20200831 10:00:04.217" endtime="20200831 10:00:04.225"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response status</arg>
<arg>422</arg>
</arguments>
<status status="PASS" starttime="20200831 10:00:04.225" endtime="20200831 10:00:04.226"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response body error status</arg>
<arg>422</arg>
</arguments>
<status status="PASS" starttime="20200831 10:00:04.226" endtime="20200831 10:00:04.226"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body error message parameters 0</arg>
<arg>Missing data for required field.</arg>
</arguments>
<status status="PASS" starttime="20200831 10:00:04.226" endtime="20200831 10:00:04.227"></status>
</kw>
<status status="PASS" starttime="20200831 10:00:04.213" endtime="20200831 10:00:04.227" critical="yes"></status>
</test>
<test id="s1-t3" name="fetch, 422, missing period field in parameters">
<kw name="Get Body">
<assign>
<var>${body}</var>
</assign>
<kw name="Copy Dictionary" library="Collections">
<doc>Returns a copy of the given dictionary.</doc>
<arguments>
<arg>${BROKER_BODY}</arg>
<arg>deepcopy=True</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200831 10:00:04.228" level="INFO">${body} = {'timestamp': '2018-11-01T12:00:00+00:00', 'productCode': 'entsoe-electricity-price-product-code', 'parameters': {'period': '2020-06-08T13:00Z/2020-06-09T22:00Z', 'targetObject': '10YFI-1--------U'}}</msg>
<status status="PASS" starttime="20200831 10:00:04.228" endtime="20200831 10:00:04.228"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>time_zone=UTC</arg>
<arg>result_format=%Y-%m-%dT%H:%M:%S+00:00</arg>
</arguments>
<assign>
<var>${now}</var>
</assign>
<msg timestamp="20200831 10:00:04.228" level="INFO">${now} = 2020-08-31T07:00:04+00:00</msg>
<status status="PASS" starttime="20200831 10:00:04.228" endtime="20200831 10:00:04.228"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${body}</arg>
<arg>timestamp</arg>
<arg>${now}</arg>
</arguments>
<status status="PASS" starttime="20200831 10:00:04.228" endtime="20200831 10:00:04.228"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${body}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20200831 10:00:04.229" endtime="20200831 10:00:04.229"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.dumps(${body})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${json_string}</var>
</assign>
<msg timestamp="20200831 10:00:04.229" level="INFO">${json_string} = {"timestamp": "2020-08-31T07:00:04+00:00", "productCode": "entsoe-electricity-price-product-code", "parameters": {"period": "2020-06-08T13:00Z/2020-06-09T22:00Z", "targetObject": "10YFI-1--------U"}}</msg>
<status status="PASS" starttime="20200831 10:00:04.229" endtime="20200831 10:00:04.229"></status>
</kw>
<msg timestamp="20200831 10:00:04.229" level="INFO">${body} = {"timestamp": "2020-08-31T07:00:04+00:00", "productCode": "entsoe-electricity-price-product-code", "parameters": {"period": "2020-06-08T13:00Z/2020-06-09T22:00Z", "targetObject": "10YFI-1--------U"}}</msg>
<status status="PASS" starttime="20200831 10:00:04.227" endtime="20200831 10:00:04.229"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads('''${body}''')</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200831 10:00:04.230" level="INFO">${body} = {'timestamp': '2020-08-31T07:00:04+00:00', 'productCode': 'entsoe-electricity-price-product-code', 'parameters': {'period': '2020-06-08T13:00Z/2020-06-09T22:00Z', 'targetObject': '10YFI-1--------U'}}</msg>
<status status="PASS" starttime="20200831 10:00:04.229" endtime="20200831 10:00:04.230"></status>
</kw>
<kw name="Pop From Dictionary" library="Collections">
<doc>Pops the given ``key`` from the ``dictionary`` and returns its value.</doc>
<arguments>
<arg>${body["parameters"]}</arg>
<arg>period</arg>
</arguments>
<status status="PASS" starttime="20200831 10:00:04.230" endtime="20200831 10:00:04.230"></status>
</kw>
<kw name="Fetch Data Product">
<arguments>
<arg>${body}</arg>
</arguments>
<kw name="Calculate Pot Signature" library="PoTLib">
<arguments>
<arg>${body}</arg>
<arg>${CLIENT_SECRET}</arg>
</arguments>
<assign>
<var>${signature}</var>
</assign>
<msg timestamp="20200831 10:00:04.232" level="INFO">qHVfCdpaCNrr7OS+k+543tcCEaYUjPz4Snp+IUBLT4w=</msg>
<msg timestamp="20200831 10:00:04.232" level="INFO">${signature} = qHVfCdpaCNrr7OS+k+543tcCEaYUjPz4Snp+IUBLT4w=</msg>
<status status="PASS" starttime="20200831 10:00:04.231" endtime="20200831 10:00:04.232"></status>
</kw>
<kw name="Set Headers" library="REST">
<tags>
<tag>settings</tag>
</tags>
<doc>*Sets new request headers or updates the existing.*</doc>
<arguments>
<arg>{"x-pot-signature": "${signature}", "x-app-token": "${APP_TOKEN}"}</arg>
</arguments>
<status status="PASS" starttime="20200831 10:00:04.232" endtime="20200831 10:00:04.232"></status>
</kw>
<kw name="Post" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a POST request to the endpoint.*</doc>
<arguments>
<arg>/translator/v1/fetch</arg>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200831 10:00:04.232" endtime="20200831 10:00:04.238"></status>
</kw>
<kw name="Output Schema" library="REST">
<tags>
<tag>I/O</tag>
</tags>
<doc>*Outputs JSON Schema to terminal or a file.*</doc>
<arguments>
<arg>response body</arg>
</arguments>
<msg timestamp="20200831 10:00:04.238" level="INFO">
{
    "type": "object",
    "properties": {
        "error": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "integer",
                    "default": 422
                },
                "message": {
                    "type": "object",
                    "properties": {
                        "parameters.period": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "default": [
                                "Missing data for required field."
                            ]
                        }
                    },
                    "required": [
                        "parameters.period"
                    ]
                }
            },
            "required": [
                "message",
                "status"
            ]
        }
    },
    "required": [
        "error"
    ]
}</msg>
<status status="PASS" starttime="20200831 10:00:04.238" endtime="20200831 10:00:04.239"></status>
</kw>
<status status="PASS" starttime="20200831 10:00:04.230" endtime="20200831 10:00:04.239"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response status</arg>
<arg>422</arg>
</arguments>
<status status="PASS" starttime="20200831 10:00:04.239" endtime="20200831 10:00:04.240"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response body error status</arg>
<arg>422</arg>
</arguments>
<status status="PASS" starttime="20200831 10:00:04.240" endtime="20200831 10:00:04.240"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body error message parameters.period 0</arg>
<arg>Missing data for required field.</arg>
</arguments>
<status status="PASS" starttime="20200831 10:00:04.240" endtime="20200831 10:00:04.241"></status>
</kw>
<status status="PASS" starttime="20200831 10:00:04.227" endtime="20200831 10:00:04.241" critical="yes"></status>
</test>
<test id="s1-t4" name="fetch, 422, missing targetObject field in parameters">
<kw name="Get Body">
<assign>
<var>${body}</var>
</assign>
<kw name="Copy Dictionary" library="Collections">
<doc>Returns a copy of the given dictionary.</doc>
<arguments>
<arg>${BROKER_BODY}</arg>
<arg>deepcopy=True</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200831 10:00:04.242" level="INFO">${body} = {'timestamp': '2018-11-01T12:00:00+00:00', 'productCode': 'entsoe-electricity-price-product-code', 'parameters': {'period': '2020-06-08T13:00Z/2020-06-09T22:00Z', 'targetObject': '10YFI-1--------U'}}</msg>
<status status="PASS" starttime="20200831 10:00:04.242" endtime="20200831 10:00:04.242"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>time_zone=UTC</arg>
<arg>result_format=%Y-%m-%dT%H:%M:%S+00:00</arg>
</arguments>
<assign>
<var>${now}</var>
</assign>
<msg timestamp="20200831 10:00:04.242" level="INFO">${now} = 2020-08-31T07:00:04+00:00</msg>
<status status="PASS" starttime="20200831 10:00:04.242" endtime="20200831 10:00:04.242"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${body}</arg>
<arg>timestamp</arg>
<arg>${now}</arg>
</arguments>
<status status="PASS" starttime="20200831 10:00:04.242" endtime="20200831 10:00:04.242"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${body}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20200831 10:00:04.243" endtime="20200831 10:00:04.243"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.dumps(${body})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${json_string}</var>
</assign>
<msg timestamp="20200831 10:00:04.243" level="INFO">${json_string} = {"timestamp": "2020-08-31T07:00:04+00:00", "productCode": "entsoe-electricity-price-product-code", "parameters": {"period": "2020-06-08T13:00Z/2020-06-09T22:00Z", "targetObject": "10YFI-1--------U"}}</msg>
<status status="PASS" starttime="20200831 10:00:04.243" endtime="20200831 10:00:04.243"></status>
</kw>
<msg timestamp="20200831 10:00:04.243" level="INFO">${body} = {"timestamp": "2020-08-31T07:00:04+00:00", "productCode": "entsoe-electricity-price-product-code", "parameters": {"period": "2020-06-08T13:00Z/2020-06-09T22:00Z", "targetObject": "10YFI-1--------U"}}</msg>
<status status="PASS" starttime="20200831 10:00:04.241" endtime="20200831 10:00:04.243"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads('''${body}''')</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200831 10:00:04.244" level="INFO">${body} = {'timestamp': '2020-08-31T07:00:04+00:00', 'productCode': 'entsoe-electricity-price-product-code', 'parameters': {'period': '2020-06-08T13:00Z/2020-06-09T22:00Z', 'targetObject': '10YFI-1--------U'}}</msg>
<status status="PASS" starttime="20200831 10:00:04.243" endtime="20200831 10:00:04.244"></status>
</kw>
<kw name="Pop From Dictionary" library="Collections">
<doc>Pops the given ``key`` from the ``dictionary`` and returns its value.</doc>
<arguments>
<arg>${body["parameters"]}</arg>
<arg>targetObject</arg>
</arguments>
<status status="PASS" starttime="20200831 10:00:04.244" endtime="20200831 10:00:04.244"></status>
</kw>
<kw name="Fetch Data Product">
<arguments>
<arg>${body}</arg>
</arguments>
<kw name="Calculate Pot Signature" library="PoTLib">
<arguments>
<arg>${body}</arg>
<arg>${CLIENT_SECRET}</arg>
</arguments>
<assign>
<var>${signature}</var>
</assign>
<msg timestamp="20200831 10:00:04.256" level="INFO">t7XNKuCRJi1tmsi5vl47SCKG3EYeDwQV0eQJWbpXoX0=</msg>
<msg timestamp="20200831 10:00:04.256" level="INFO">${signature} = t7XNKuCRJi1tmsi5vl47SCKG3EYeDwQV0eQJWbpXoX0=</msg>
<status status="PASS" starttime="20200831 10:00:04.244" endtime="20200831 10:00:04.256"></status>
</kw>
<kw name="Set Headers" library="REST">
<tags>
<tag>settings</tag>
</tags>
<doc>*Sets new request headers or updates the existing.*</doc>
<arguments>
<arg>{"x-pot-signature": "${signature}", "x-app-token": "${APP_TOKEN}"}</arg>
</arguments>
<status status="PASS" starttime="20200831 10:00:04.256" endtime="20200831 10:00:04.256"></status>
</kw>
<kw name="Post" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a POST request to the endpoint.*</doc>
<arguments>
<arg>/translator/v1/fetch</arg>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200831 10:00:04.256" endtime="20200831 10:00:04.262"></status>
</kw>
<kw name="Output Schema" library="REST">
<tags>
<tag>I/O</tag>
</tags>
<doc>*Outputs JSON Schema to terminal or a file.*</doc>
<arguments>
<arg>response body</arg>
</arguments>
<msg timestamp="20200831 10:00:04.262" level="INFO">
{
    "type": "object",
    "properties": {
        "error": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "integer",
                    "default": 422
                },
                "message": {
                    "type": "object",
                    "properties": {
                        "parameters.targetObject": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "default": [
                                "Missing data for required field."
                            ]
                        }
                    },
                    "required": [
                        "parameters.targetObject"
                    ]
                }
            },
            "required": [
                "message",
                "status"
            ]
        }
    },
    "required": [
        "error"
    ]
}</msg>
<status status="PASS" starttime="20200831 10:00:04.262" endtime="20200831 10:00:04.263"></status>
</kw>
<status status="PASS" starttime="20200831 10:00:04.244" endtime="20200831 10:00:04.263"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response status</arg>
<arg>422</arg>
</arguments>
<status status="PASS" starttime="20200831 10:00:04.263" endtime="20200831 10:00:04.264"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response body error status</arg>
<arg>422</arg>
</arguments>
<status status="PASS" starttime="20200831 10:00:04.264" endtime="20200831 10:00:04.264"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body error message parameters.targetObject 0</arg>
<arg>Missing data for required field.</arg>
</arguments>
<status status="PASS" starttime="20200831 10:00:04.264" endtime="20200831 10:00:04.265"></status>
</kw>
<status status="PASS" starttime="20200831 10:00:04.241" endtime="20200831 10:00:04.265" critical="yes"></status>
</test>
<test id="s1-t5" name="fetch, 200, period's first time parameter is bigger than second">
<kw name="Get Body">
<assign>
<var>${body}</var>
</assign>
<kw name="Copy Dictionary" library="Collections">
<doc>Returns a copy of the given dictionary.</doc>
<arguments>
<arg>${BROKER_BODY}</arg>
<arg>deepcopy=True</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200831 10:00:04.266" level="INFO">${body} = {'timestamp': '2018-11-01T12:00:00+00:00', 'productCode': 'entsoe-electricity-price-product-code', 'parameters': {'period': '2020-06-08T13:00Z/2020-06-09T22:00Z', 'targetObject': '10YFI-1--------U'}}</msg>
<status status="PASS" starttime="20200831 10:00:04.266" endtime="20200831 10:00:04.266"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>time_zone=UTC</arg>
<arg>result_format=%Y-%m-%dT%H:%M:%S+00:00</arg>
</arguments>
<assign>
<var>${now}</var>
</assign>
<msg timestamp="20200831 10:00:04.267" level="INFO">${now} = 2020-08-31T07:00:04+00:00</msg>
<status status="PASS" starttime="20200831 10:00:04.266" endtime="20200831 10:00:04.267"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${body}</arg>
<arg>timestamp</arg>
<arg>${now}</arg>
</arguments>
<status status="PASS" starttime="20200831 10:00:04.267" endtime="20200831 10:00:04.267"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${body}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20200831 10:00:04.267" endtime="20200831 10:00:04.267"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.dumps(${body})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${json_string}</var>
</assign>
<msg timestamp="20200831 10:00:04.268" level="INFO">${json_string} = {"timestamp": "2020-08-31T07:00:04+00:00", "productCode": "entsoe-electricity-price-product-code", "parameters": {"period": "2020-06-08T13:00Z/2020-06-09T22:00Z", "targetObject": "10YFI-1--------U"}}</msg>
<status status="PASS" starttime="20200831 10:00:04.267" endtime="20200831 10:00:04.268"></status>
</kw>
<msg timestamp="20200831 10:00:04.268" level="INFO">${body} = {"timestamp": "2020-08-31T07:00:04+00:00", "productCode": "entsoe-electricity-price-product-code", "parameters": {"period": "2020-06-08T13:00Z/2020-06-09T22:00Z", "targetObject": "10YFI-1--------U"}}</msg>
<status status="PASS" starttime="20200831 10:00:04.266" endtime="20200831 10:00:04.268"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads('''${body}''')</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200831 10:00:04.268" level="INFO">${body} = {'timestamp': '2020-08-31T07:00:04+00:00', 'productCode': 'entsoe-electricity-price-product-code', 'parameters': {'period': '2020-06-08T13:00Z/2020-06-09T22:00Z', 'targetObject': '10YFI-1--------U'}}</msg>
<status status="PASS" starttime="20200831 10:00:04.268" endtime="20200831 10:00:04.269"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${body["parameters"]}</arg>
<arg>period=${PERIOD_SWAP}</arg>
</arguments>
<status status="PASS" starttime="20200831 10:00:04.269" endtime="20200831 10:00:04.269"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.dumps(${body})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200831 10:00:04.270" level="INFO">${body} = {"timestamp": "2020-08-31T07:00:04+00:00", "productCode": "entsoe-electricity-price-product-code", "parameters": {"period": "2020-06-09T22:00Z/2020-06-08T13:00Z", "targetObject": "10YFI-1--------U"}}</msg>
<status status="PASS" starttime="20200831 10:00:04.270" endtime="20200831 10:00:04.270"></status>
</kw>
<kw name="Fetch Data Product">
<arguments>
<arg>${body}</arg>
</arguments>
<kw name="Calculate Pot Signature" library="PoTLib">
<arguments>
<arg>${body}</arg>
<arg>${CLIENT_SECRET}</arg>
</arguments>
<assign>
<var>${signature}</var>
</assign>
<msg timestamp="20200831 10:00:04.271" level="INFO">4eiem2Qv0XO+ih+RfPSzG4KTFcvMU/hOM8WuOsRcmPg=</msg>
<msg timestamp="20200831 10:00:04.271" level="INFO">${signature} = 4eiem2Qv0XO+ih+RfPSzG4KTFcvMU/hOM8WuOsRcmPg=</msg>
<status status="PASS" starttime="20200831 10:00:04.271" endtime="20200831 10:00:04.271"></status>
</kw>
<kw name="Set Headers" library="REST">
<tags>
<tag>settings</tag>
</tags>
<doc>*Sets new request headers or updates the existing.*</doc>
<arguments>
<arg>{"x-pot-signature": "${signature}", "x-app-token": "${APP_TOKEN}"}</arg>
</arguments>
<status status="PASS" starttime="20200831 10:00:04.271" endtime="20200831 10:00:04.272"></status>
</kw>
<kw name="Post" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a POST request to the endpoint.*</doc>
<arguments>
<arg>/translator/v1/fetch</arg>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200831 10:00:04.272" endtime="20200831 10:00:04.764"></status>
</kw>
<kw name="Output Schema" library="REST">
<tags>
<tag>I/O</tag>
</tags>
<doc>*Outputs JSON Schema to terminal or a file.*</doc>
<arguments>
<arg>response body</arg>
</arguments>
<msg timestamp="20200831 10:00:04.765" level="INFO">
{
    "type": "object",
    "properties": {
        "@context": {
            "type": "string",
            "default": "https://standards.oftrust.net/v2/Context/DataProductOutput/Forecast/Price/Electricity/"
        },
        "data": {
            "type": "object",
            "properties": {
                "forecasts": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "@type": {
                                "type": "string"
                            },
                            "period": {
                                "type": "string"
                            },
                            "pricePlans": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "@type": {
                                            "type": "string"
                                        },
                                        "currency": {
                                            "type": "string"
                                        },
                                        "period": {
                                            "type": "string"
                                        },
                                        "rate": {
                                            "type": "number"
                                        }
                                    },
                                    "required": [
                                        "@type",
                                        "currency",
                                        "period",
                                        "rate"
                                    ]
                                }
                            }
                        },
                        "required": [
                            "@type",
                            "period",
                            "pricePlans"
                        ]
                    },
                    "default": [
                        {
                            "@type": "ForecastElectricityPriceMWH",
                            "period": "07.06.2020/09.06.2020",
                            "pricePlans": [
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "07.06.2020T22:00/1h",
                                    "rate": 3.68
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "07.06.2020T23:00/1h",
                                    "rate": 2.85
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T00:00/1h",
                                    "rate": 2.95
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T01:00/1h",
                                    "rate": 3.15
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T02:00/1h",
                                    "rate": 4.58
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T03:00/1h",
                                    "rate": 7.06
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T04:00/1h",
                                    "rate": 32.65
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T05:00/1h",
                                    "rate": 42.95
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T06:00/1h",
                                    "rate": 41.24
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T07:00/1h",
                                    "rate": 38.9
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T08:00/1h",
                                    "rate": 35.1
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T09:00/1h",
                                    "rate": 35.86
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T10:00/1h",
                                    "rate": 33.81
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T11:00/1h",
                                    "rate": 32.72
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T12:00/1h",
                                    "rate": 30.94
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T13:00/1h",
                                    "rate": 30
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T14:00/1h",
                                    "rate": 29.42
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T15:00/1h",
                                    "rate": 33.31
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T16:00/1h",
                                    "rate": 38.85
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T17:00/1h",
                                    "rate": 38.65
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T18:00/1h",
                                    "rate": 35.23
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T19:00/1h",
                                    "rate": 34.6
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T20:00/1h",
                                    "rate": 32.26
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T21:00/1h",
                                    "rate": 11.04
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T22:00/1h",
                                    "rate": 5.33
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T23:00/1h",
                                    "rate": 3.81
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T00:00/1h",
                                    "rate": 3.34
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T01:00/1h",
                                    "rate": 3.11
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T02:00/1h",
                                    "rate": 3.64
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T03:00/1h",
                                    "rate": 7.21
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T04:00/1h",
                                    "rate": 33.43
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T05:00/1h",
                                    "rate": 47.74
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T06:00/1h",
                                    "rate": 55.78
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T07:00/1h",
                                    "rate": 55.67
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T08:00/1h",
                                    "rate": 54.6
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T09:00/1h",
                                    "rate": 55.23
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T10:00/1h",
                                    "rate": 55.27
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T11:00/1h",
                                    "rate": 40.07
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T12:00/1h",
                                    "rate": 36.39
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T13:00/1h",
                                    "rate": 33.49
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T14:00/1h",
                                    "rate": 33.76
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T15:00/1h",
                                    "rate": 41.61
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T16:00/1h",
                                    "rate": 45.21
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T17:00/1h",
                                    "rate": 48.07
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T18:00/1h",
                                    "rate": 42.06
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T19:00/1h",
                                    "rate": 36.57
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T20:00/1h",
                                    "rate": 18.97
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T21:00/1h",
                                    "rate": 8.38
                                }
                            ]
                        }
                    ]
                }
            },
            "required": [
                "forecasts"
            ]
        },
        "signature": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string",
                    "default": "RsaSignature2018"
                },
                "created": {
                    "type": "string",
                    "default": "2020-08-31T10:00:04+03:00"
                },
                "creator": {
                    "type": "string",
                    "default": "http://localhost:8080/entsoe/translator/v1/public.key"
                },
                "signatureValue": {
                    "type": "string",
                    "default": "MPl93Lx80akHdmLEi9fQdAE+XjE1hAHl4joerXLe1/5NPZpA8fFCHCWAbedcaovwHq9Ovdyw4Obatn/AWbezBrY6yswxLWUpzE0ueMeoEwaz/bKZaI7Gz20/mS22G13Ry1SGxGqx73L5nvz2gKMJwWXmWAUaqL/Jj/teH82hA/jyOSYi1WBmYay0cTbroi448UsXQa2inXWOJe280Tsye4N5NnkknYe4XLK8dPOYbOwjCHPYPIqLWixSwTFoVp82zFrwcRDx6Wnw/xoHR7a3Qr1QH/nWQm5hp0WajRcQMw16/RiwHFzXoAO9IUW79CwyAU42hWYEAcn23GZtk9LOp5q2OybZJz8I6qD8lfp70TgWTXuCBpUU5O5FHl8vms9SR+Q/WaGLdthc/39J03xo6K/EbuJWFzL1hilhs9v7VL1UbB8KG9wKsWZcKPkkNdxTick31dEJ1hNksH0mSrDsFIC8rmF0UFYpu9G2jnKq+Gq6DnkfbBUaY+XoYv1JNpkRtsqUnknitsPf00cKC7EyMs+Vpfq7F7YAyHocHDlE1FURsY68vp7daXi/7oq3s6VWrupmdHxHFCNAF/LPbZTIPpxdPc7/4+LMfA9Bj5tmapC2IHM6nh0OziVKZL9FsUznddLJnZs0LKuEpn8JlOu+yRG6kNyjfHjhqby5aiXamuE="
                }
            },
            "required": [
                "created",
                "creator",
                "signatureValue",
                "type"
            ]
        }
    },
    "required": [
        "@context",
        "data",
        "signature"
    ]
}</msg>
<status status="PASS" starttime="20200831 10:00:04.764" endtime="20200831 10:00:04.777"></status>
</kw>
<status status="PASS" starttime="20200831 10:00:04.270" endtime="20200831 10:00:04.777"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response status</arg>
<arg>200</arg>
</arguments>
<status status="PASS" starttime="20200831 10:00:04.777" endtime="20200831 10:00:04.778"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body @context</arg>
<arg>https://standards.oftrust.net/v2/Context/DataProductOutput/Forecast/Price/Electricity/</arg>
</arguments>
<status status="PASS" starttime="20200831 10:00:04.778" endtime="20200831 10:00:04.779"></status>
</kw>
<kw name="Object" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON object.*</doc>
<arguments>
<arg>response body data</arg>
</arguments>
<status status="PASS" starttime="20200831 10:00:04.779" endtime="20200831 10:00:04.781"></status>
</kw>
<kw name="Array" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON array.*</doc>
<arguments>
<arg>response body data forecasts</arg>
</arguments>
<status status="PASS" starttime="20200831 10:00:04.781" endtime="20200831 10:00:04.783"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body data forecasts 0 @type</arg>
<arg>ForecastElectricityPriceMWH</arg>
</arguments>
<status status="PASS" starttime="20200831 10:00:04.783" endtime="20200831 10:00:04.784"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body data forecasts 0 period</arg>
<arg>07.06.2020/09.06.2020</arg>
</arguments>
<status status="PASS" starttime="20200831 10:00:04.784" endtime="20200831 10:00:04.785"></status>
</kw>
<kw name="Array" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON array.*</doc>
<arguments>
<arg>response body data forecasts 0 pricePlans</arg>
</arguments>
<status status="PASS" starttime="20200831 10:00:04.785" endtime="20200831 10:00:04.787"></status>
</kw>
<kw name="Object" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON object.*</doc>
<arguments>
<arg>response body data forecasts 0 pricePlans 0</arg>
<arg>{"@type": "pricePlan","currency": "EUR","period": "07.06.2020T22:00/1h","rate": 3.68}</arg>
</arguments>
<status status="PASS" starttime="20200831 10:00:04.787" endtime="20200831 10:00:04.788"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body data forecasts 0 pricePlans 0 @type</arg>
<arg>pricePlan</arg>
</arguments>
<status status="PASS" starttime="20200831 10:00:04.789" endtime="20200831 10:00:04.789"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body data forecasts 0 pricePlans 0 currency</arg>
<arg>EUR</arg>
</arguments>
<status status="PASS" starttime="20200831 10:00:04.790" endtime="20200831 10:00:04.790"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body data forecasts 0 pricePlans 0 period</arg>
<arg>07.06.2020T22:00/1h</arg>
</arguments>
<status status="PASS" starttime="20200831 10:00:04.791" endtime="20200831 10:00:04.791"></status>
</kw>
<kw name="Number" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON number.*</doc>
<arguments>
<arg>response body data forecasts 0 pricePlans 0 rate</arg>
<arg>3.68</arg>
</arguments>
<status status="PASS" starttime="20200831 10:00:04.792" endtime="20200831 10:00:04.792"></status>
</kw>
<status status="PASS" starttime="20200831 10:00:04.265" endtime="20200831 10:00:04.793" critical="yes"></status>
</test>
<status status="PASS" starttime="20200831 10:00:03.510" endtime="20200831 10:00:04.793"></status>
</suite>
<statistics>
<total>
<stat pass="5" fail="0">Critical Tests</stat>
<stat pass="5" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="5" fail="0" id="s1" name="Connector Tests">Connector Tests</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
