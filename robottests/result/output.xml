<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.8.5 on darwin)" generated="20200922 13:55:17.903" rpa="false">
<suite id="s1" name="Connector Tests" source="/Users/konstantinkomovits/PoT/connector-entsoe/robottests/connector_tests.robot">
<test id="s1-t1" name="fetch, 200">
<kw name="Get Body">
<assign>
<var>${body}</var>
</assign>
<kw name="Copy Dictionary" library="Collections">
<doc>Returns a copy of the given dictionary.</doc>
<arguments>
<arg>${BROKER_BODY}</arg>
<arg>deepcopy=True</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200922 13:55:18.139" level="INFO">${body} = {'timestamp': '2018-11-01T12:00:00+00:00', 'productCode': 'entsoe-electricity-price-product-code', 'parameters': {'period': '2020-06-08T13:00Z/2020-06-09T22:00Z', 'targetObject': '10YFI-1--------U'}}</msg>
<status status="PASS" starttime="20200922 13:55:18.139" endtime="20200922 13:55:18.139"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>time_zone=UTC</arg>
<arg>result_format=%Y-%m-%dT%H:%M:%S+00:00</arg>
</arguments>
<assign>
<var>${now}</var>
</assign>
<msg timestamp="20200922 13:55:18.139" level="INFO">${now} = 2020-09-22T10:55:18+00:00</msg>
<status status="PASS" starttime="20200922 13:55:18.139" endtime="20200922 13:55:18.140"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${body}</arg>
<arg>timestamp</arg>
<arg>${now}</arg>
</arguments>
<status status="PASS" starttime="20200922 13:55:18.140" endtime="20200922 13:55:18.140"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${body}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20200922 13:55:18.140" endtime="20200922 13:55:18.140"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.dumps(${body})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${json_string}</var>
</assign>
<msg timestamp="20200922 13:55:18.140" level="INFO">${json_string} = {"timestamp": "2020-09-22T10:55:18+00:00", "productCode": "entsoe-electricity-price-product-code", "parameters": {"period": "2020-06-08T13:00Z/2020-06-09T22:00Z", "targetObject": "10YFI-1--------U"}}</msg>
<status status="PASS" starttime="20200922 13:55:18.140" endtime="20200922 13:55:18.140"></status>
</kw>
<msg timestamp="20200922 13:55:18.141" level="INFO">${body} = {"timestamp": "2020-09-22T10:55:18+00:00", "productCode": "entsoe-electricity-price-product-code", "parameters": {"period": "2020-06-08T13:00Z/2020-06-09T22:00Z", "targetObject": "10YFI-1--------U"}}</msg>
<status status="PASS" starttime="20200922 13:55:18.138" endtime="20200922 13:55:18.141"></status>
</kw>
<kw name="Fetch Data Product">
<arguments>
<arg>${body}</arg>
</arguments>
<kw name="Calculate Pot Signature" library="PoTLib">
<arguments>
<arg>${body}</arg>
<arg>${CLIENT_SECRET}</arg>
</arguments>
<assign>
<var>${signature}</var>
</assign>
<msg timestamp="20200922 13:55:18.141" level="INFO">ZUFq63hYS2+O4l2L19fyfCJjCKvTSPcym6sj5dWU1Bk=</msg>
<msg timestamp="20200922 13:55:18.141" level="INFO">${signature} = ZUFq63hYS2+O4l2L19fyfCJjCKvTSPcym6sj5dWU1Bk=</msg>
<status status="PASS" starttime="20200922 13:55:18.141" endtime="20200922 13:55:18.141"></status>
</kw>
<kw name="Set Headers" library="REST">
<tags>
<tag>settings</tag>
</tags>
<doc>*Sets new request headers or updates the existing.*</doc>
<arguments>
<arg>{"x-pot-signature": "${signature}", "x-app-token": "${APP_TOKEN}"}</arg>
</arguments>
<status status="PASS" starttime="20200922 13:55:18.141" endtime="20200922 13:55:18.142"></status>
</kw>
<kw name="Post" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a POST request to the endpoint.*</doc>
<arguments>
<arg>/translator/v1/fetch</arg>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200922 13:55:18.142" endtime="20200922 13:55:20.456"></status>
</kw>
<kw name="Output Schema" library="REST">
<tags>
<tag>I/O</tag>
</tags>
<doc>*Outputs JSON Schema to terminal or a file.*</doc>
<arguments>
<arg>response body</arg>
</arguments>
<msg timestamp="20200922 13:55:20.457" level="INFO">
{
    "type": "object",
    "properties": {
        "@context": {
            "type": "string",
            "default": "https://standards.oftrust.net/v2/Context/DataProductOutput/Forecast/Price/Electricity/"
        },
        "data": {
            "type": "object",
            "properties": {
                "forecasts": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "@type": {
                                "type": "string"
                            },
                            "period": {
                                "type": "string"
                            },
                            "pricePlans": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "@type": {
                                            "type": "string"
                                        },
                                        "currency": {
                                            "type": "string"
                                        },
                                        "period": {
                                            "type": "string"
                                        },
                                        "rate": {
                                            "type": "number"
                                        }
                                    },
                                    "required": [
                                        "@type",
                                        "currency",
                                        "period",
                                        "rate"
                                    ]
                                }
                            }
                        },
                        "required": [
                            "@type",
                            "period",
                            "pricePlans"
                        ]
                    },
                    "default": [
                        {
                            "@type": "ForecastElectricityPriceMWH",
                            "period": "07.06.2020/09.06.2020",
                            "pricePlans": [
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "07.06.2020T22:00/1h",
                                    "rate": 3.68
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "07.06.2020T23:00/1h",
                                    "rate": 2.85
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T00:00/1h",
                                    "rate": 2.95
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T01:00/1h",
                                    "rate": 3.15
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T02:00/1h",
                                    "rate": 4.58
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T03:00/1h",
                                    "rate": 7.06
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T04:00/1h",
                                    "rate": 32.65
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T05:00/1h",
                                    "rate": 42.95
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T06:00/1h",
                                    "rate": 41.24
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T07:00/1h",
                                    "rate": 38.9
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T08:00/1h",
                                    "rate": 35.1
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T09:00/1h",
                                    "rate": 35.86
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T10:00/1h",
                                    "rate": 33.81
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T11:00/1h",
                                    "rate": 32.72
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T12:00/1h",
                                    "rate": 30.94
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T13:00/1h",
                                    "rate": 30
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T14:00/1h",
                                    "rate": 29.42
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T15:00/1h",
                                    "rate": 33.31
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T16:00/1h",
                                    "rate": 38.85
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T17:00/1h",
                                    "rate": 38.65
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T18:00/1h",
                                    "rate": 35.23
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T19:00/1h",
                                    "rate": 34.6
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T20:00/1h",
                                    "rate": 32.26
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T21:00/1h",
                                    "rate": 11.04
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T22:00/1h",
                                    "rate": 5.33
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T23:00/1h",
                                    "rate": 3.81
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T00:00/1h",
                                    "rate": 3.34
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T01:00/1h",
                                    "rate": 3.11
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T02:00/1h",
                                    "rate": 3.64
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T03:00/1h",
                                    "rate": 7.21
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T04:00/1h",
                                    "rate": 33.43
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T05:00/1h",
                                    "rate": 47.74
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T06:00/1h",
                                    "rate": 55.78
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T07:00/1h",
                                    "rate": 55.67
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T08:00/1h",
                                    "rate": 54.6
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T09:00/1h",
                                    "rate": 55.23
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T10:00/1h",
                                    "rate": 55.27
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T11:00/1h",
                                    "rate": 40.07
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T12:00/1h",
                                    "rate": 36.39
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T13:00/1h",
                                    "rate": 33.49
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T14:00/1h",
                                    "rate": 33.76
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T15:00/1h",
                                    "rate": 41.61
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T16:00/1h",
                                    "rate": 45.21
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T17:00/1h",
                                    "rate": 48.07
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T18:00/1h",
                                    "rate": 42.06
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T19:00/1h",
                                    "rate": 36.57
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T20:00/1h",
                                    "rate": 18.97
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T21:00/1h",
                                    "rate": 8.38
                                }
                            ]
                        }
                    ]
                }
            },
            "required": [
                "forecasts"
            ]
        },
        "signature": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string",
                    "default": "RsaSignature2018"
                },
                "created": {
                    "type": "string",
                    "default": "2020-09-22T10:55:20+00:00"
                },
                "creator": {
                    "type": "string",
                    "default": "http://localhost:8080/entsoe/translator/v1/public.key"
                },
                "signatureValue": {
                    "type": "string",
                    "default": "bRipCgCRoiTrOIhR9NYA2rh1yCDP8+CY0J1G6JpB32FNmJRPA2q1Rz6B3lBLPUpAPE/iDrAbT5jeiC3Cn+h880haFbcP1L5cBrRd5kio+gCJmIkXQfAyLPQ96QNp1SdrLM4ADCnnDao4wEBK6+VTJPB8zUpIQ/uu2dhMSnQ0pRCHZ3LBg2Urp8Vr/aZnBMPvpOKPVAaNYIAzV8Glcko45hmIwxxEuj1bQrchCcIg9WCwFhVaal7lHYZhlJWbmfJYUu/WyD2ug1B3KpVOeJo5VB4XPrvU5dRMaES7VhUUaW67LVtQpv5aM4qtcOvqBB/sjqlvhClAOM/E5UQFs+c7suz9TqcLl1415i4kVyEpxjt3+UQ86NOAr28xVQNsQUf1QIZR3Jx1Z2bTL79T7LAE8LFYbtSQMKssicI2gDySmBa57Zznn2aWwDcBGw86lwV/MyJwMSxNU8qIcju6jModQXKj5lRiLP4/+ajaT1JMuZcfvqUI8Xj+3k5sL2D1RZOWyjXlDJUyOhDvZCaMfsoYkWhyBbG81EX/89BKbcPhsn2R1Ovg5XVQabYfpIOYMvzTVLX12cghrJS/x06L4G7GamHzF14NNwbsv5KfzIEJkbM4IOgMGvf8TZOiMJYLO5umOB15o8i7W4MAFb0vsBJtCTI2xw7SgD0EyiUOhKWI+mA="
                }
            },
            "required": [
                "created",
                "creator",
                "signatureValue",
                "type"
            ]
        }
    },
    "required": [
        "@context",
        "data",
        "signature"
    ]
}</msg>
<status status="PASS" starttime="20200922 13:55:20.456" endtime="20200922 13:55:20.474"></status>
</kw>
<status status="PASS" starttime="20200922 13:55:18.141" endtime="20200922 13:55:20.474"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response status</arg>
<arg>200</arg>
</arguments>
<status status="PASS" starttime="20200922 13:55:20.474" endtime="20200922 13:55:20.475"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body @context</arg>
<arg>https://standards.oftrust.net/v2/Context/DataProductOutput/Forecast/Price/Electricity/</arg>
</arguments>
<status status="PASS" starttime="20200922 13:55:20.475" endtime="20200922 13:55:20.475"></status>
</kw>
<kw name="Object" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON object.*</doc>
<arguments>
<arg>response body data</arg>
</arguments>
<status status="PASS" starttime="20200922 13:55:20.476" endtime="20200922 13:55:20.478"></status>
</kw>
<kw name="Array" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON array.*</doc>
<arguments>
<arg>response body data forecasts</arg>
</arguments>
<status status="PASS" starttime="20200922 13:55:20.478" endtime="20200922 13:55:20.480"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body data forecasts 0 @type</arg>
<arg>ForecastElectricityPriceMWH</arg>
</arguments>
<status status="PASS" starttime="20200922 13:55:20.481" endtime="20200922 13:55:20.481"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body data forecasts 0 period</arg>
<arg>07.06.2020/09.06.2020</arg>
</arguments>
<status status="PASS" starttime="20200922 13:55:20.482" endtime="20200922 13:55:20.483"></status>
</kw>
<kw name="Array" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON array.*</doc>
<arguments>
<arg>response body data forecasts 0 pricePlans</arg>
</arguments>
<status status="PASS" starttime="20200922 13:55:20.483" endtime="20200922 13:55:20.490"></status>
</kw>
<kw name="Object" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON object.*</doc>
<arguments>
<arg>response body data forecasts 0 pricePlans 0</arg>
<arg>{"@type": "pricePlan","currency": "EUR","period": "07.06.2020T22:00/1h","rate": 3.68}</arg>
</arguments>
<status status="PASS" starttime="20200922 13:55:20.490" endtime="20200922 13:55:20.491"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body data forecasts 0 pricePlans 0 @type</arg>
<arg>pricePlan</arg>
</arguments>
<status status="PASS" starttime="20200922 13:55:20.492" endtime="20200922 13:55:20.492"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body data forecasts 0 pricePlans 0 currency</arg>
<arg>EUR</arg>
</arguments>
<status status="PASS" starttime="20200922 13:55:20.493" endtime="20200922 13:55:20.493"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body data forecasts 0 pricePlans 0 period</arg>
<arg>07.06.2020T22:00/1h</arg>
</arguments>
<status status="PASS" starttime="20200922 13:55:20.494" endtime="20200922 13:55:20.494"></status>
</kw>
<kw name="Number" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON number.*</doc>
<arguments>
<arg>response body data forecasts 0 pricePlans 0 rate</arg>
<arg>3.68</arg>
</arguments>
<status status="PASS" starttime="20200922 13:55:20.495" endtime="20200922 13:55:20.496"></status>
</kw>
<status status="PASS" starttime="20200922 13:55:18.138" endtime="20200922 13:55:20.496" critical="yes"></status>
</test>
<test id="s1-t2" name="fetch, 422, Missing data for parameters required field">
<kw name="Get Body">
<assign>
<var>${body}</var>
</assign>
<kw name="Copy Dictionary" library="Collections">
<doc>Returns a copy of the given dictionary.</doc>
<arguments>
<arg>${BROKER_BODY}</arg>
<arg>deepcopy=True</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200922 13:55:20.497" level="INFO">${body} = {'timestamp': '2018-11-01T12:00:00+00:00', 'productCode': 'entsoe-electricity-price-product-code', 'parameters': {'period': '2020-06-08T13:00Z/2020-06-09T22:00Z', 'targetObject': '10YFI-1--------U'}}</msg>
<status status="PASS" starttime="20200922 13:55:20.497" endtime="20200922 13:55:20.497"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>time_zone=UTC</arg>
<arg>result_format=%Y-%m-%dT%H:%M:%S+00:00</arg>
</arguments>
<assign>
<var>${now}</var>
</assign>
<msg timestamp="20200922 13:55:20.498" level="INFO">${now} = 2020-09-22T10:55:20+00:00</msg>
<status status="PASS" starttime="20200922 13:55:20.497" endtime="20200922 13:55:20.498"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${body}</arg>
<arg>timestamp</arg>
<arg>${now}</arg>
</arguments>
<status status="PASS" starttime="20200922 13:55:20.498" endtime="20200922 13:55:20.498"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${body}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20200922 13:55:20.498" endtime="20200922 13:55:20.498"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.dumps(${body})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${json_string}</var>
</assign>
<msg timestamp="20200922 13:55:20.499" level="INFO">${json_string} = {"timestamp": "2020-09-22T10:55:20+00:00", "productCode": "entsoe-electricity-price-product-code", "parameters": {"period": "2020-06-08T13:00Z/2020-06-09T22:00Z", "targetObject": "10YFI-1--------U"}}</msg>
<status status="PASS" starttime="20200922 13:55:20.499" endtime="20200922 13:55:20.499"></status>
</kw>
<msg timestamp="20200922 13:55:20.499" level="INFO">${body} = {"timestamp": "2020-09-22T10:55:20+00:00", "productCode": "entsoe-electricity-price-product-code", "parameters": {"period": "2020-06-08T13:00Z/2020-06-09T22:00Z", "targetObject": "10YFI-1--------U"}}</msg>
<status status="PASS" starttime="20200922 13:55:20.497" endtime="20200922 13:55:20.499"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads('''${body}''')</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200922 13:55:20.499" level="INFO">${body} = {'timestamp': '2020-09-22T10:55:20+00:00', 'productCode': 'entsoe-electricity-price-product-code', 'parameters': {'period': '2020-06-08T13:00Z/2020-06-09T22:00Z', 'targetObject': '10YFI-1--------U'}}</msg>
<status status="PASS" starttime="20200922 13:55:20.499" endtime="20200922 13:55:20.499"></status>
</kw>
<kw name="Pop From Dictionary" library="Collections">
<doc>Pops the given ``key`` from the ``dictionary`` and returns its value.</doc>
<arguments>
<arg>${body}</arg>
<arg>parameters</arg>
</arguments>
<status status="PASS" starttime="20200922 13:55:20.500" endtime="20200922 13:55:20.500"></status>
</kw>
<kw name="Fetch Data Product">
<arguments>
<arg>${body}</arg>
</arguments>
<kw name="Calculate Pot Signature" library="PoTLib">
<arguments>
<arg>${body}</arg>
<arg>${CLIENT_SECRET}</arg>
</arguments>
<assign>
<var>${signature}</var>
</assign>
<msg timestamp="20200922 13:55:20.500" level="INFO">uUvEQn24gYx64DKsV3Y5N9ez1A2JmzP2mVuML4HVjzg=</msg>
<msg timestamp="20200922 13:55:20.500" level="INFO">${signature} = uUvEQn24gYx64DKsV3Y5N9ez1A2JmzP2mVuML4HVjzg=</msg>
<status status="PASS" starttime="20200922 13:55:20.500" endtime="20200922 13:55:20.501"></status>
</kw>
<kw name="Set Headers" library="REST">
<tags>
<tag>settings</tag>
</tags>
<doc>*Sets new request headers or updates the existing.*</doc>
<arguments>
<arg>{"x-pot-signature": "${signature}", "x-app-token": "${APP_TOKEN}"}</arg>
</arguments>
<status status="PASS" starttime="20200922 13:55:20.501" endtime="20200922 13:55:20.501"></status>
</kw>
<kw name="Post" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a POST request to the endpoint.*</doc>
<arguments>
<arg>/translator/v1/fetch</arg>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200922 13:55:20.501" endtime="20200922 13:55:20.509"></status>
</kw>
<kw name="Output Schema" library="REST">
<tags>
<tag>I/O</tag>
</tags>
<doc>*Outputs JSON Schema to terminal or a file.*</doc>
<arguments>
<arg>response body</arg>
</arguments>
<msg timestamp="20200922 13:55:20.510" level="INFO">
{
    "type": "object",
    "properties": {
        "error": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "integer",
                    "default": 422
                },
                "message": {
                    "type": "object",
                    "properties": {
                        "parameters": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "default": [
                                "Missing data for required field."
                            ]
                        },
                        "parameters.targetObject": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "default": [
                                "Missing data for required field."
                            ]
                        },
                        "parameters.period": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "default": [
                                "Missing data for required field."
                            ]
                        }
                    },
                    "required": [
                        "parameters",
                        "parameters.period",
                        "parameters.targetObject"
                    ]
                }
            },
            "required": [
                "message",
                "status"
            ]
        }
    },
    "required": [
        "error"
    ]
}</msg>
<status status="PASS" starttime="20200922 13:55:20.510" endtime="20200922 13:55:20.512"></status>
</kw>
<status status="PASS" starttime="20200922 13:55:20.500" endtime="20200922 13:55:20.512"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response status</arg>
<arg>422</arg>
</arguments>
<status status="PASS" starttime="20200922 13:55:20.512" endtime="20200922 13:55:20.513"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response body error status</arg>
<arg>422</arg>
</arguments>
<status status="PASS" starttime="20200922 13:55:20.513" endtime="20200922 13:55:20.514"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body error message parameters 0</arg>
<arg>Missing data for required field.</arg>
</arguments>
<status status="PASS" starttime="20200922 13:55:20.514" endtime="20200922 13:55:20.514"></status>
</kw>
<status status="PASS" starttime="20200922 13:55:20.496" endtime="20200922 13:55:20.514" critical="yes"></status>
</test>
<test id="s1-t3" name="fetch, 422, missing period field in parameters">
<kw name="Get Body">
<assign>
<var>${body}</var>
</assign>
<kw name="Copy Dictionary" library="Collections">
<doc>Returns a copy of the given dictionary.</doc>
<arguments>
<arg>${BROKER_BODY}</arg>
<arg>deepcopy=True</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200922 13:55:20.516" level="INFO">${body} = {'timestamp': '2018-11-01T12:00:00+00:00', 'productCode': 'entsoe-electricity-price-product-code', 'parameters': {'period': '2020-06-08T13:00Z/2020-06-09T22:00Z', 'targetObject': '10YFI-1--------U'}}</msg>
<status status="PASS" starttime="20200922 13:55:20.516" endtime="20200922 13:55:20.516"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>time_zone=UTC</arg>
<arg>result_format=%Y-%m-%dT%H:%M:%S+00:00</arg>
</arguments>
<assign>
<var>${now}</var>
</assign>
<msg timestamp="20200922 13:55:20.517" level="INFO">${now} = 2020-09-22T10:55:20+00:00</msg>
<status status="PASS" starttime="20200922 13:55:20.517" endtime="20200922 13:55:20.517"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${body}</arg>
<arg>timestamp</arg>
<arg>${now}</arg>
</arguments>
<status status="PASS" starttime="20200922 13:55:20.517" endtime="20200922 13:55:20.517"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${body}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20200922 13:55:20.517" endtime="20200922 13:55:20.517"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.dumps(${body})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${json_string}</var>
</assign>
<msg timestamp="20200922 13:55:20.518" level="INFO">${json_string} = {"timestamp": "2020-09-22T10:55:20+00:00", "productCode": "entsoe-electricity-price-product-code", "parameters": {"period": "2020-06-08T13:00Z/2020-06-09T22:00Z", "targetObject": "10YFI-1--------U"}}</msg>
<status status="PASS" starttime="20200922 13:55:20.517" endtime="20200922 13:55:20.518"></status>
</kw>
<msg timestamp="20200922 13:55:20.518" level="INFO">${body} = {"timestamp": "2020-09-22T10:55:20+00:00", "productCode": "entsoe-electricity-price-product-code", "parameters": {"period": "2020-06-08T13:00Z/2020-06-09T22:00Z", "targetObject": "10YFI-1--------U"}}</msg>
<status status="PASS" starttime="20200922 13:55:20.516" endtime="20200922 13:55:20.518"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads('''${body}''')</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200922 13:55:20.518" level="INFO">${body} = {'timestamp': '2020-09-22T10:55:20+00:00', 'productCode': 'entsoe-electricity-price-product-code', 'parameters': {'period': '2020-06-08T13:00Z/2020-06-09T22:00Z', 'targetObject': '10YFI-1--------U'}}</msg>
<status status="PASS" starttime="20200922 13:55:20.518" endtime="20200922 13:55:20.518"></status>
</kw>
<kw name="Pop From Dictionary" library="Collections">
<doc>Pops the given ``key`` from the ``dictionary`` and returns its value.</doc>
<arguments>
<arg>${body["parameters"]}</arg>
<arg>period</arg>
</arguments>
<status status="PASS" starttime="20200922 13:55:20.518" endtime="20200922 13:55:20.519"></status>
</kw>
<kw name="Fetch Data Product">
<arguments>
<arg>${body}</arg>
</arguments>
<kw name="Calculate Pot Signature" library="PoTLib">
<arguments>
<arg>${body}</arg>
<arg>${CLIENT_SECRET}</arg>
</arguments>
<assign>
<var>${signature}</var>
</assign>
<msg timestamp="20200922 13:55:20.519" level="INFO">RsjQ9sa8lu+6zVAaS9d54t2jI8pluc26A/M5nJZnOPU=</msg>
<msg timestamp="20200922 13:55:20.519" level="INFO">${signature} = RsjQ9sa8lu+6zVAaS9d54t2jI8pluc26A/M5nJZnOPU=</msg>
<status status="PASS" starttime="20200922 13:55:20.519" endtime="20200922 13:55:20.519"></status>
</kw>
<kw name="Set Headers" library="REST">
<tags>
<tag>settings</tag>
</tags>
<doc>*Sets new request headers or updates the existing.*</doc>
<arguments>
<arg>{"x-pot-signature": "${signature}", "x-app-token": "${APP_TOKEN}"}</arg>
</arguments>
<status status="PASS" starttime="20200922 13:55:20.520" endtime="20200922 13:55:20.520"></status>
</kw>
<kw name="Post" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a POST request to the endpoint.*</doc>
<arguments>
<arg>/translator/v1/fetch</arg>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200922 13:55:20.520" endtime="20200922 13:55:20.527"></status>
</kw>
<kw name="Output Schema" library="REST">
<tags>
<tag>I/O</tag>
</tags>
<doc>*Outputs JSON Schema to terminal or a file.*</doc>
<arguments>
<arg>response body</arg>
</arguments>
<msg timestamp="20200922 13:55:20.527" level="INFO">
{
    "type": "object",
    "properties": {
        "error": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "integer",
                    "default": 422
                },
                "message": {
                    "type": "object",
                    "properties": {
                        "parameters.period": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "default": [
                                "Missing data for required field."
                            ]
                        }
                    },
                    "required": [
                        "parameters.period"
                    ]
                }
            },
            "required": [
                "message",
                "status"
            ]
        }
    },
    "required": [
        "error"
    ]
}</msg>
<status status="PASS" starttime="20200922 13:55:20.527" endtime="20200922 13:55:20.529"></status>
</kw>
<status status="PASS" starttime="20200922 13:55:20.519" endtime="20200922 13:55:20.529"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response status</arg>
<arg>422</arg>
</arguments>
<status status="PASS" starttime="20200922 13:55:20.529" endtime="20200922 13:55:20.530"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response body error status</arg>
<arg>422</arg>
</arguments>
<status status="PASS" starttime="20200922 13:55:20.530" endtime="20200922 13:55:20.531"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body error message parameters.period 0</arg>
<arg>Missing data for required field.</arg>
</arguments>
<status status="PASS" starttime="20200922 13:55:20.531" endtime="20200922 13:55:20.531"></status>
</kw>
<status status="PASS" starttime="20200922 13:55:20.515" endtime="20200922 13:55:20.532" critical="yes"></status>
</test>
<test id="s1-t4" name="fetch, 422, missing targetObject field in parameters">
<kw name="Get Body">
<assign>
<var>${body}</var>
</assign>
<kw name="Copy Dictionary" library="Collections">
<doc>Returns a copy of the given dictionary.</doc>
<arguments>
<arg>${BROKER_BODY}</arg>
<arg>deepcopy=True</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200922 13:55:20.533" level="INFO">${body} = {'timestamp': '2018-11-01T12:00:00+00:00', 'productCode': 'entsoe-electricity-price-product-code', 'parameters': {'period': '2020-06-08T13:00Z/2020-06-09T22:00Z', 'targetObject': '10YFI-1--------U'}}</msg>
<status status="PASS" starttime="20200922 13:55:20.532" endtime="20200922 13:55:20.533"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>time_zone=UTC</arg>
<arg>result_format=%Y-%m-%dT%H:%M:%S+00:00</arg>
</arguments>
<assign>
<var>${now}</var>
</assign>
<msg timestamp="20200922 13:55:20.533" level="INFO">${now} = 2020-09-22T10:55:20+00:00</msg>
<status status="PASS" starttime="20200922 13:55:20.533" endtime="20200922 13:55:20.533"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${body}</arg>
<arg>timestamp</arg>
<arg>${now}</arg>
</arguments>
<status status="PASS" starttime="20200922 13:55:20.533" endtime="20200922 13:55:20.533"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${body}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20200922 13:55:20.533" endtime="20200922 13:55:20.534"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.dumps(${body})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${json_string}</var>
</assign>
<msg timestamp="20200922 13:55:20.548" level="INFO">${json_string} = {"timestamp": "2020-09-22T10:55:20+00:00", "productCode": "entsoe-electricity-price-product-code", "parameters": {"period": "2020-06-08T13:00Z/2020-06-09T22:00Z", "targetObject": "10YFI-1--------U"}}</msg>
<status status="PASS" starttime="20200922 13:55:20.534" endtime="20200922 13:55:20.548"></status>
</kw>
<msg timestamp="20200922 13:55:20.548" level="INFO">${body} = {"timestamp": "2020-09-22T10:55:20+00:00", "productCode": "entsoe-electricity-price-product-code", "parameters": {"period": "2020-06-08T13:00Z/2020-06-09T22:00Z", "targetObject": "10YFI-1--------U"}}</msg>
<status status="PASS" starttime="20200922 13:55:20.532" endtime="20200922 13:55:20.548"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads('''${body}''')</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200922 13:55:20.549" level="INFO">${body} = {'timestamp': '2020-09-22T10:55:20+00:00', 'productCode': 'entsoe-electricity-price-product-code', 'parameters': {'period': '2020-06-08T13:00Z/2020-06-09T22:00Z', 'targetObject': '10YFI-1--------U'}}</msg>
<status status="PASS" starttime="20200922 13:55:20.548" endtime="20200922 13:55:20.549"></status>
</kw>
<kw name="Pop From Dictionary" library="Collections">
<doc>Pops the given ``key`` from the ``dictionary`` and returns its value.</doc>
<arguments>
<arg>${body["parameters"]}</arg>
<arg>targetObject</arg>
</arguments>
<status status="PASS" starttime="20200922 13:55:20.549" endtime="20200922 13:55:20.549"></status>
</kw>
<kw name="Fetch Data Product">
<arguments>
<arg>${body}</arg>
</arguments>
<kw name="Calculate Pot Signature" library="PoTLib">
<arguments>
<arg>${body}</arg>
<arg>${CLIENT_SECRET}</arg>
</arguments>
<assign>
<var>${signature}</var>
</assign>
<msg timestamp="20200922 13:55:20.550" level="INFO">8KiLe24V+6L9XrFP0oFHsAS63A15QimHKThA88HSfNk=</msg>
<msg timestamp="20200922 13:55:20.550" level="INFO">${signature} = 8KiLe24V+6L9XrFP0oFHsAS63A15QimHKThA88HSfNk=</msg>
<status status="PASS" starttime="20200922 13:55:20.550" endtime="20200922 13:55:20.550"></status>
</kw>
<kw name="Set Headers" library="REST">
<tags>
<tag>settings</tag>
</tags>
<doc>*Sets new request headers or updates the existing.*</doc>
<arguments>
<arg>{"x-pot-signature": "${signature}", "x-app-token": "${APP_TOKEN}"}</arg>
</arguments>
<status status="PASS" starttime="20200922 13:55:20.550" endtime="20200922 13:55:20.550"></status>
</kw>
<kw name="Post" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a POST request to the endpoint.*</doc>
<arguments>
<arg>/translator/v1/fetch</arg>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200922 13:55:20.551" endtime="20200922 13:55:20.558"></status>
</kw>
<kw name="Output Schema" library="REST">
<tags>
<tag>I/O</tag>
</tags>
<doc>*Outputs JSON Schema to terminal or a file.*</doc>
<arguments>
<arg>response body</arg>
</arguments>
<msg timestamp="20200922 13:55:20.559" level="INFO">
{
    "type": "object",
    "properties": {
        "error": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "integer",
                    "default": 422
                },
                "message": {
                    "type": "object",
                    "properties": {
                        "parameters.targetObject": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "default": [
                                "Missing data for required field."
                            ]
                        }
                    },
                    "required": [
                        "parameters.targetObject"
                    ]
                }
            },
            "required": [
                "message",
                "status"
            ]
        }
    },
    "required": [
        "error"
    ]
}</msg>
<status status="PASS" starttime="20200922 13:55:20.559" endtime="20200922 13:55:20.560"></status>
</kw>
<status status="PASS" starttime="20200922 13:55:20.549" endtime="20200922 13:55:20.560"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response status</arg>
<arg>422</arg>
</arguments>
<status status="PASS" starttime="20200922 13:55:20.560" endtime="20200922 13:55:20.561"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response body error status</arg>
<arg>422</arg>
</arguments>
<status status="PASS" starttime="20200922 13:55:20.561" endtime="20200922 13:55:20.561"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body error message parameters.targetObject 0</arg>
<arg>Missing data for required field.</arg>
</arguments>
<status status="PASS" starttime="20200922 13:55:20.562" endtime="20200922 13:55:20.562"></status>
</kw>
<status status="PASS" starttime="20200922 13:55:20.532" endtime="20200922 13:55:20.562" critical="yes"></status>
</test>
<test id="s1-t5" name="fetch, 200, period's first time parameter is bigger than second">
<kw name="Get Body">
<assign>
<var>${body}</var>
</assign>
<kw name="Copy Dictionary" library="Collections">
<doc>Returns a copy of the given dictionary.</doc>
<arguments>
<arg>${BROKER_BODY}</arg>
<arg>deepcopy=True</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200922 13:55:20.564" level="INFO">${body} = {'timestamp': '2018-11-01T12:00:00+00:00', 'productCode': 'entsoe-electricity-price-product-code', 'parameters': {'period': '2020-06-08T13:00Z/2020-06-09T22:00Z', 'targetObject': '10YFI-1--------U'}}</msg>
<status status="PASS" starttime="20200922 13:55:20.563" endtime="20200922 13:55:20.564"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>time_zone=UTC</arg>
<arg>result_format=%Y-%m-%dT%H:%M:%S+00:00</arg>
</arguments>
<assign>
<var>${now}</var>
</assign>
<msg timestamp="20200922 13:55:20.564" level="INFO">${now} = 2020-09-22T10:55:20+00:00</msg>
<status status="PASS" starttime="20200922 13:55:20.564" endtime="20200922 13:55:20.564"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${body}</arg>
<arg>timestamp</arg>
<arg>${now}</arg>
</arguments>
<status status="PASS" starttime="20200922 13:55:20.564" endtime="20200922 13:55:20.564"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${body}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20200922 13:55:20.564" endtime="20200922 13:55:20.565"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.dumps(${body})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${json_string}</var>
</assign>
<msg timestamp="20200922 13:55:20.565" level="INFO">${json_string} = {"timestamp": "2020-09-22T10:55:20+00:00", "productCode": "entsoe-electricity-price-product-code", "parameters": {"period": "2020-06-08T13:00Z/2020-06-09T22:00Z", "targetObject": "10YFI-1--------U"}}</msg>
<status status="PASS" starttime="20200922 13:55:20.565" endtime="20200922 13:55:20.565"></status>
</kw>
<msg timestamp="20200922 13:55:20.565" level="INFO">${body} = {"timestamp": "2020-09-22T10:55:20+00:00", "productCode": "entsoe-electricity-price-product-code", "parameters": {"period": "2020-06-08T13:00Z/2020-06-09T22:00Z", "targetObject": "10YFI-1--------U"}}</msg>
<status status="PASS" starttime="20200922 13:55:20.563" endtime="20200922 13:55:20.565"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads('''${body}''')</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200922 13:55:20.566" level="INFO">${body} = {'timestamp': '2020-09-22T10:55:20+00:00', 'productCode': 'entsoe-electricity-price-product-code', 'parameters': {'period': '2020-06-08T13:00Z/2020-06-09T22:00Z', 'targetObject': '10YFI-1--------U'}}</msg>
<status status="PASS" starttime="20200922 13:55:20.565" endtime="20200922 13:55:20.566"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${body["parameters"]}</arg>
<arg>period=${PERIOD_SWAP}</arg>
</arguments>
<status status="PASS" starttime="20200922 13:55:20.566" endtime="20200922 13:55:20.566"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.dumps(${body})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200922 13:55:20.567" level="INFO">${body} = {"timestamp": "2020-09-22T10:55:20+00:00", "productCode": "entsoe-electricity-price-product-code", "parameters": {"period": "2020-06-09T22:00Z/2020-06-08T13:00Z", "targetObject": "10YFI-1--------U"}}</msg>
<status status="PASS" starttime="20200922 13:55:20.566" endtime="20200922 13:55:20.567"></status>
</kw>
<kw name="Fetch Data Product">
<arguments>
<arg>${body}</arg>
</arguments>
<kw name="Calculate Pot Signature" library="PoTLib">
<arguments>
<arg>${body}</arg>
<arg>${CLIENT_SECRET}</arg>
</arguments>
<assign>
<var>${signature}</var>
</assign>
<msg timestamp="20200922 13:55:20.567" level="INFO">wML6NcciNCqJIido2MgX4EgtnIl2yr11xriBMj1MURs=</msg>
<msg timestamp="20200922 13:55:20.567" level="INFO">${signature} = wML6NcciNCqJIido2MgX4EgtnIl2yr11xriBMj1MURs=</msg>
<status status="PASS" starttime="20200922 13:55:20.567" endtime="20200922 13:55:20.567"></status>
</kw>
<kw name="Set Headers" library="REST">
<tags>
<tag>settings</tag>
</tags>
<doc>*Sets new request headers or updates the existing.*</doc>
<arguments>
<arg>{"x-pot-signature": "${signature}", "x-app-token": "${APP_TOKEN}"}</arg>
</arguments>
<status status="PASS" starttime="20200922 13:55:20.567" endtime="20200922 13:55:20.568"></status>
</kw>
<kw name="Post" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a POST request to the endpoint.*</doc>
<arguments>
<arg>/translator/v1/fetch</arg>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200922 13:55:20.568" endtime="20200922 13:55:21.074"></status>
</kw>
<kw name="Output Schema" library="REST">
<tags>
<tag>I/O</tag>
</tags>
<doc>*Outputs JSON Schema to terminal or a file.*</doc>
<arguments>
<arg>response body</arg>
</arguments>
<msg timestamp="20200922 13:55:21.075" level="INFO">
{
    "type": "object",
    "properties": {
        "@context": {
            "type": "string",
            "default": "https://standards.oftrust.net/v2/Context/DataProductOutput/Forecast/Price/Electricity/"
        },
        "data": {
            "type": "object",
            "properties": {
                "forecasts": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "@type": {
                                "type": "string"
                            },
                            "period": {
                                "type": "string"
                            },
                            "pricePlans": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "@type": {
                                            "type": "string"
                                        },
                                        "currency": {
                                            "type": "string"
                                        },
                                        "period": {
                                            "type": "string"
                                        },
                                        "rate": {
                                            "type": "number"
                                        }
                                    },
                                    "required": [
                                        "@type",
                                        "currency",
                                        "period",
                                        "rate"
                                    ]
                                }
                            }
                        },
                        "required": [
                            "@type",
                            "period",
                            "pricePlans"
                        ]
                    },
                    "default": [
                        {
                            "@type": "ForecastElectricityPriceMWH",
                            "period": "07.06.2020/09.06.2020",
                            "pricePlans": [
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "07.06.2020T22:00/1h",
                                    "rate": 3.68
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "07.06.2020T23:00/1h",
                                    "rate": 2.85
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T00:00/1h",
                                    "rate": 2.95
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T01:00/1h",
                                    "rate": 3.15
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T02:00/1h",
                                    "rate": 4.58
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T03:00/1h",
                                    "rate": 7.06
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T04:00/1h",
                                    "rate": 32.65
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T05:00/1h",
                                    "rate": 42.95
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T06:00/1h",
                                    "rate": 41.24
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T07:00/1h",
                                    "rate": 38.9
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T08:00/1h",
                                    "rate": 35.1
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T09:00/1h",
                                    "rate": 35.86
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T10:00/1h",
                                    "rate": 33.81
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T11:00/1h",
                                    "rate": 32.72
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T12:00/1h",
                                    "rate": 30.94
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T13:00/1h",
                                    "rate": 30
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T14:00/1h",
                                    "rate": 29.42
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T15:00/1h",
                                    "rate": 33.31
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T16:00/1h",
                                    "rate": 38.85
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T17:00/1h",
                                    "rate": 38.65
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T18:00/1h",
                                    "rate": 35.23
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T19:00/1h",
                                    "rate": 34.6
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T20:00/1h",
                                    "rate": 32.26
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T21:00/1h",
                                    "rate": 11.04
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T22:00/1h",
                                    "rate": 5.33
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T23:00/1h",
                                    "rate": 3.81
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T00:00/1h",
                                    "rate": 3.34
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T01:00/1h",
                                    "rate": 3.11
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T02:00/1h",
                                    "rate": 3.64
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T03:00/1h",
                                    "rate": 7.21
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T04:00/1h",
                                    "rate": 33.43
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T05:00/1h",
                                    "rate": 47.74
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T06:00/1h",
                                    "rate": 55.78
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T07:00/1h",
                                    "rate": 55.67
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T08:00/1h",
                                    "rate": 54.6
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T09:00/1h",
                                    "rate": 55.23
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T10:00/1h",
                                    "rate": 55.27
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T11:00/1h",
                                    "rate": 40.07
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T12:00/1h",
                                    "rate": 36.39
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T13:00/1h",
                                    "rate": 33.49
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T14:00/1h",
                                    "rate": 33.76
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T15:00/1h",
                                    "rate": 41.61
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T16:00/1h",
                                    "rate": 45.21
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T17:00/1h",
                                    "rate": 48.07
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T18:00/1h",
                                    "rate": 42.06
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T19:00/1h",
                                    "rate": 36.57
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T20:00/1h",
                                    "rate": 18.97
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T21:00/1h",
                                    "rate": 8.38
                                }
                            ]
                        }
                    ]
                }
            },
            "required": [
                "forecasts"
            ]
        },
        "signature": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string",
                    "default": "RsaSignature2018"
                },
                "created": {
                    "type": "string",
                    "default": "2020-09-22T10:55:21+00:00"
                },
                "creator": {
                    "type": "string",
                    "default": "http://localhost:8080/entsoe/translator/v1/public.key"
                },
                "signatureValue": {
                    "type": "string",
                    "default": "gDgwAwHQ0GW3FcyespaQMc8JoD4ToBzByPfY9jYOHkLay9WqegkEvu2YH7ErpRFIvpaXp1+6TJpJ0RV0mar50voDmsLLBPtitDQ9/rZ94pNA6sufySGoX+bIRkKpNxTNdzad6iM2wMM0Xee+Mejjc7W3nHPkzN/wyb3sKCeX9cyb5jj+FugtqBkzYpVHy+Zo4/XYa2YBc8WiL3wAGib8G9cA26sRCODYkWMTDLRkyRE57zUnfqWnJaQoaJTyOJVFAg4RXCzdXytscedx7gavLQzsMWvmVV7TDZvOvYkRpIB1UHxp1L5eX80gHE5F4j3GHxPXtcprb44rL7/RsKkhqBuEWHCsxqjMUBh+T72vVZijwjnMsjRjma9kkDnDAf5d3isxfuU4yfss6OtXrIv2c+ywB+uogRBf/PycHj5v1IL+ysDgshZYpAV3HBxz2a6aIcWRKSBXR2hRzYx2XuHwfeZzQWf065dhOX2mdwnyVSLhSF6O7S33tVToIhL0oIGRrg4wy3yYk/k5LTaST3yY0bYxSZzCLWw/tiKnmNslo69sQ+dLwIqBVC70VYG52M/n2AenSjb324R78ci0nH6RtelbhzJF4xnkLiGnfgx3kvNVZEItO6Zha2Lds42A3dcr4gEQF2FqZB65jJobPz6kzUF42Y32mOC8o0ZIgxj8CVc="
                }
            },
            "required": [
                "created",
                "creator",
                "signatureValue",
                "type"
            ]
        }
    },
    "required": [
        "@context",
        "data",
        "signature"
    ]
}</msg>
<status status="PASS" starttime="20200922 13:55:21.074" endtime="20200922 13:55:21.086"></status>
</kw>
<status status="PASS" starttime="20200922 13:55:20.567" endtime="20200922 13:55:21.086"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response status</arg>
<arg>200</arg>
</arguments>
<status status="PASS" starttime="20200922 13:55:21.086" endtime="20200922 13:55:21.087"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body @context</arg>
<arg>https://standards.oftrust.net/v2/Context/DataProductOutput/Forecast/Price/Electricity/</arg>
</arguments>
<status status="PASS" starttime="20200922 13:55:21.087" endtime="20200922 13:55:21.087"></status>
</kw>
<kw name="Object" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON object.*</doc>
<arguments>
<arg>response body data</arg>
</arguments>
<status status="PASS" starttime="20200922 13:55:21.088" endtime="20200922 13:55:21.090"></status>
</kw>
<kw name="Array" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON array.*</doc>
<arguments>
<arg>response body data forecasts</arg>
</arguments>
<status status="PASS" starttime="20200922 13:55:21.090" endtime="20200922 13:55:21.092"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body data forecasts 0 @type</arg>
<arg>ForecastElectricityPriceMWH</arg>
</arguments>
<status status="PASS" starttime="20200922 13:55:21.092" endtime="20200922 13:55:21.093"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body data forecasts 0 period</arg>
<arg>07.06.2020/09.06.2020</arg>
</arguments>
<status status="PASS" starttime="20200922 13:55:21.093" endtime="20200922 13:55:21.094"></status>
</kw>
<kw name="Array" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON array.*</doc>
<arguments>
<arg>response body data forecasts 0 pricePlans</arg>
</arguments>
<status status="PASS" starttime="20200922 13:55:21.094" endtime="20200922 13:55:21.096"></status>
</kw>
<kw name="Object" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON object.*</doc>
<arguments>
<arg>response body data forecasts 0 pricePlans 0</arg>
<arg>{"@type": "pricePlan","currency": "EUR","period": "07.06.2020T22:00/1h","rate": 3.68}</arg>
</arguments>
<status status="PASS" starttime="20200922 13:55:21.096" endtime="20200922 13:55:21.097"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body data forecasts 0 pricePlans 0 @type</arg>
<arg>pricePlan</arg>
</arguments>
<status status="PASS" starttime="20200922 13:55:21.097" endtime="20200922 13:55:21.098"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body data forecasts 0 pricePlans 0 currency</arg>
<arg>EUR</arg>
</arguments>
<status status="PASS" starttime="20200922 13:55:21.098" endtime="20200922 13:55:21.099"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body data forecasts 0 pricePlans 0 period</arg>
<arg>07.06.2020T22:00/1h</arg>
</arguments>
<status status="PASS" starttime="20200922 13:55:21.099" endtime="20200922 13:55:21.100"></status>
</kw>
<kw name="Number" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON number.*</doc>
<arguments>
<arg>response body data forecasts 0 pricePlans 0 rate</arg>
<arg>3.68</arg>
</arguments>
<status status="PASS" starttime="20200922 13:55:21.100" endtime="20200922 13:55:21.101"></status>
</kw>
<status status="PASS" starttime="20200922 13:55:20.563" endtime="20200922 13:55:21.101" critical="yes"></status>
</test>
<test id="s1-t6" name="fetch, 200, period is array">
<kw name="Get Body">
<assign>
<var>${body}</var>
</assign>
<kw name="Copy Dictionary" library="Collections">
<doc>Returns a copy of the given dictionary.</doc>
<arguments>
<arg>${BROKER_BODY}</arg>
<arg>deepcopy=True</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200922 13:55:21.102" level="INFO">${body} = {'timestamp': '2018-11-01T12:00:00+00:00', 'productCode': 'entsoe-electricity-price-product-code', 'parameters': {'period': '2020-06-08T13:00Z/2020-06-09T22:00Z', 'targetObject': '10YFI-1--------U'}}</msg>
<status status="PASS" starttime="20200922 13:55:21.102" endtime="20200922 13:55:21.102"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>time_zone=UTC</arg>
<arg>result_format=%Y-%m-%dT%H:%M:%S+00:00</arg>
</arguments>
<assign>
<var>${now}</var>
</assign>
<msg timestamp="20200922 13:55:21.103" level="INFO">${now} = 2020-09-22T10:55:21+00:00</msg>
<status status="PASS" starttime="20200922 13:55:21.103" endtime="20200922 13:55:21.103"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${body}</arg>
<arg>timestamp</arg>
<arg>${now}</arg>
</arguments>
<status status="PASS" starttime="20200922 13:55:21.103" endtime="20200922 13:55:21.103"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${body}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20200922 13:55:21.103" endtime="20200922 13:55:21.103"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.dumps(${body})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${json_string}</var>
</assign>
<msg timestamp="20200922 13:55:21.104" level="INFO">${json_string} = {"timestamp": "2020-09-22T10:55:21+00:00", "productCode": "entsoe-electricity-price-product-code", "parameters": {"period": "2020-06-08T13:00Z/2020-06-09T22:00Z", "targetObject": "10YFI-1--------U"}}</msg>
<status status="PASS" starttime="20200922 13:55:21.103" endtime="20200922 13:55:21.104"></status>
</kw>
<msg timestamp="20200922 13:55:21.104" level="INFO">${body} = {"timestamp": "2020-09-22T10:55:21+00:00", "productCode": "entsoe-electricity-price-product-code", "parameters": {"period": "2020-06-08T13:00Z/2020-06-09T22:00Z", "targetObject": "10YFI-1--------U"}}</msg>
<status status="PASS" starttime="20200922 13:55:21.102" endtime="20200922 13:55:21.104"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads('''${body}''')</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200922 13:55:21.104" level="INFO">${body} = {'timestamp': '2020-09-22T10:55:21+00:00', 'productCode': 'entsoe-electricity-price-product-code', 'parameters': {'period': '2020-06-08T13:00Z/2020-06-09T22:00Z', 'targetObject': '10YFI-1--------U'}}</msg>
<status status="PASS" starttime="20200922 13:55:21.104" endtime="20200922 13:55:21.104"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${body["parameters"]}</arg>
<arg>period=${PERIOD_ARRAY}</arg>
</arguments>
<status status="PASS" starttime="20200922 13:55:21.104" endtime="20200922 13:55:21.105"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.dumps(${body})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200922 13:55:21.105" level="INFO">${body} = {"timestamp": "2020-09-22T10:55:21+00:00", "productCode": "entsoe-electricity-price-product-code", "parameters": {"period": ["2020-06-08T13:00Z/2020-06-09T22:00Z"], "targetObject": "10YFI-1--------U"}...</msg>
<status status="PASS" starttime="20200922 13:55:21.105" endtime="20200922 13:55:21.105"></status>
</kw>
<kw name="Fetch Data Product">
<arguments>
<arg>${body}</arg>
</arguments>
<kw name="Calculate Pot Signature" library="PoTLib">
<arguments>
<arg>${body}</arg>
<arg>${CLIENT_SECRET}</arg>
</arguments>
<assign>
<var>${signature}</var>
</assign>
<msg timestamp="20200922 13:55:21.106" level="INFO">R46bJ6aQj1xHjOs+ibldbV+s1dfWBE7AnCvl2er2JKs=</msg>
<msg timestamp="20200922 13:55:21.106" level="INFO">${signature} = R46bJ6aQj1xHjOs+ibldbV+s1dfWBE7AnCvl2er2JKs=</msg>
<status status="PASS" starttime="20200922 13:55:21.106" endtime="20200922 13:55:21.106"></status>
</kw>
<kw name="Set Headers" library="REST">
<tags>
<tag>settings</tag>
</tags>
<doc>*Sets new request headers or updates the existing.*</doc>
<arguments>
<arg>{"x-pot-signature": "${signature}", "x-app-token": "${APP_TOKEN}"}</arg>
</arguments>
<status status="PASS" starttime="20200922 13:55:21.106" endtime="20200922 13:55:21.106"></status>
</kw>
<kw name="Post" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a POST request to the endpoint.*</doc>
<arguments>
<arg>/translator/v1/fetch</arg>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200922 13:55:21.106" endtime="20200922 13:55:21.499"></status>
</kw>
<kw name="Output Schema" library="REST">
<tags>
<tag>I/O</tag>
</tags>
<doc>*Outputs JSON Schema to terminal or a file.*</doc>
<arguments>
<arg>response body</arg>
</arguments>
<msg timestamp="20200922 13:55:21.500" level="INFO">
{
    "type": "object",
    "properties": {
        "@context": {
            "type": "string",
            "default": "https://standards.oftrust.net/v2/Context/DataProductOutput/Forecast/Price/Electricity/"
        },
        "data": {
            "type": "object",
            "properties": {
                "forecasts": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "@type": {
                                "type": "string"
                            },
                            "period": {
                                "type": "string"
                            },
                            "pricePlans": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "@type": {
                                            "type": "string"
                                        },
                                        "currency": {
                                            "type": "string"
                                        },
                                        "period": {
                                            "type": "string"
                                        },
                                        "rate": {
                                            "type": "number"
                                        }
                                    },
                                    "required": [
                                        "@type",
                                        "currency",
                                        "period",
                                        "rate"
                                    ]
                                }
                            }
                        },
                        "required": [
                            "@type",
                            "period",
                            "pricePlans"
                        ]
                    },
                    "default": [
                        {
                            "@type": "ForecastElectricityPriceMWH",
                            "period": "07.06.2020/09.06.2020",
                            "pricePlans": [
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "07.06.2020T22:00/1h",
                                    "rate": 3.68
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "07.06.2020T23:00/1h",
                                    "rate": 2.85
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T00:00/1h",
                                    "rate": 2.95
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T01:00/1h",
                                    "rate": 3.15
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T02:00/1h",
                                    "rate": 4.58
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T03:00/1h",
                                    "rate": 7.06
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T04:00/1h",
                                    "rate": 32.65
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T05:00/1h",
                                    "rate": 42.95
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T06:00/1h",
                                    "rate": 41.24
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T07:00/1h",
                                    "rate": 38.9
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T08:00/1h",
                                    "rate": 35.1
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T09:00/1h",
                                    "rate": 35.86
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T10:00/1h",
                                    "rate": 33.81
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T11:00/1h",
                                    "rate": 32.72
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T12:00/1h",
                                    "rate": 30.94
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T13:00/1h",
                                    "rate": 30
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T14:00/1h",
                                    "rate": 29.42
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T15:00/1h",
                                    "rate": 33.31
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T16:00/1h",
                                    "rate": 38.85
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T17:00/1h",
                                    "rate": 38.65
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T18:00/1h",
                                    "rate": 35.23
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T19:00/1h",
                                    "rate": 34.6
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T20:00/1h",
                                    "rate": 32.26
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T21:00/1h",
                                    "rate": 11.04
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T22:00/1h",
                                    "rate": 5.33
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T23:00/1h",
                                    "rate": 3.81
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T00:00/1h",
                                    "rate": 3.34
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T01:00/1h",
                                    "rate": 3.11
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T02:00/1h",
                                    "rate": 3.64
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T03:00/1h",
                                    "rate": 7.21
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T04:00/1h",
                                    "rate": 33.43
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T05:00/1h",
                                    "rate": 47.74
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T06:00/1h",
                                    "rate": 55.78
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T07:00/1h",
                                    "rate": 55.67
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T08:00/1h",
                                    "rate": 54.6
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T09:00/1h",
                                    "rate": 55.23
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T10:00/1h",
                                    "rate": 55.27
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T11:00/1h",
                                    "rate": 40.07
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T12:00/1h",
                                    "rate": 36.39
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T13:00/1h",
                                    "rate": 33.49
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T14:00/1h",
                                    "rate": 33.76
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T15:00/1h",
                                    "rate": 41.61
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T16:00/1h",
                                    "rate": 45.21
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T17:00/1h",
                                    "rate": 48.07
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T18:00/1h",
                                    "rate": 42.06
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T19:00/1h",
                                    "rate": 36.57
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T20:00/1h",
                                    "rate": 18.97
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T21:00/1h",
                                    "rate": 8.38
                                }
                            ]
                        }
                    ]
                }
            },
            "required": [
                "forecasts"
            ]
        },
        "signature": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string",
                    "default": "RsaSignature2018"
                },
                "created": {
                    "type": "string",
                    "default": "2020-09-22T10:55:21+00:00"
                },
                "creator": {
                    "type": "string",
                    "default": "http://localhost:8080/entsoe/translator/v1/public.key"
                },
                "signatureValue": {
                    "type": "string",
                    "default": "pHKsmvhNaH4hut36KFMu2XIPV2Wsdhhsp40HZedONlPLm33ri9FAc5lxU9380kW87IX8j29+5WaHTgBuUzjCxbF2mAoJDWPN9V2JmoFaCMsELh5zNJoL5jfUUNFeCUo8io5TiBMKtrmLQVqZuIzX57F7E+pPkhjpPHHzPMxTRBoZU+EJLH+av0kRCbNPxYPkMa/CpBrZ62b2K/1XAW5zPGG2hwkJnkxvqhgL2z7QKv3P1GrIoAhDbiOrKCYQpwFmXlwKcJL4+sdJBWOwPyvUIGfWSniUQwtRGIJW/tGdmPsmbQL0oa33TGLPDid9Aj8mrJPZQIoveFDg1Z6KMwDIxKgFjl2tnscElPlIvzvig2YDUaKAzO9nC3m2a5PkDf+t7BOyupaaGseZU+ykBI9ZcLasMI9CsC0M6XWWZHrCZcaH1xxuZZ1p7rlJw4SuGhoRrc8LPBlKCtfTzOkDKtD0woFXJ7Tzz9l+48ENLQcSX8vpRQ8cENWUKr3wx4AwbLrJGR9Sjx6A+jCc9Ow6mmlUaCF6ZIAl8Ss367yPnVOMhLvghuSN3+rBxxFwu72eCH37xW376Gy1WKU2tgtd7u+YlmOie2n0juwSvx5OcyHzM4YPXzXBq3Ykeu3VqR5+MY8FyQzK179wKgwuLlaISmAAHkWaFGByh9BL/TIukMgKSwI="
                }
            },
            "required": [
                "created",
                "creator",
                "signatureValue",
                "type"
            ]
        }
    },
    "required": [
        "@context",
        "data",
        "signature"
    ]
}</msg>
<status status="PASS" starttime="20200922 13:55:21.499" endtime="20200922 13:55:21.511"></status>
</kw>
<status status="PASS" starttime="20200922 13:55:21.105" endtime="20200922 13:55:21.511"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response status</arg>
<arg>200</arg>
</arguments>
<status status="PASS" starttime="20200922 13:55:21.511" endtime="20200922 13:55:21.512"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body @context</arg>
<arg>https://standards.oftrust.net/v2/Context/DataProductOutput/Forecast/Price/Electricity/</arg>
</arguments>
<status status="PASS" starttime="20200922 13:55:21.512" endtime="20200922 13:55:21.512"></status>
</kw>
<kw name="Object" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON object.*</doc>
<arguments>
<arg>response body data</arg>
</arguments>
<status status="PASS" starttime="20200922 13:55:21.512" endtime="20200922 13:55:21.514"></status>
</kw>
<kw name="Array" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON array.*</doc>
<arguments>
<arg>response body data forecasts</arg>
</arguments>
<status status="PASS" starttime="20200922 13:55:21.514" endtime="20200922 13:55:21.516"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body data forecasts 0 @type</arg>
<arg>ForecastElectricityPriceMWH</arg>
</arguments>
<status status="PASS" starttime="20200922 13:55:21.516" endtime="20200922 13:55:21.517"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body data forecasts 0 period</arg>
<arg>07.06.2020/09.06.2020</arg>
</arguments>
<status status="PASS" starttime="20200922 13:55:21.517" endtime="20200922 13:55:21.518"></status>
</kw>
<kw name="Array" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON array.*</doc>
<arguments>
<arg>response body data forecasts 0 pricePlans</arg>
</arguments>
<status status="PASS" starttime="20200922 13:55:21.518" endtime="20200922 13:55:21.521"></status>
</kw>
<kw name="Object" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON object.*</doc>
<arguments>
<arg>response body data forecasts 0 pricePlans 0</arg>
<arg>{"@type": "pricePlan","currency": "EUR","period": "07.06.2020T22:00/1h","rate": 3.68}</arg>
</arguments>
<status status="PASS" starttime="20200922 13:55:21.521" endtime="20200922 13:55:21.522"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body data forecasts 0 pricePlans 0 @type</arg>
<arg>pricePlan</arg>
</arguments>
<status status="PASS" starttime="20200922 13:55:21.522" endtime="20200922 13:55:21.523"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body data forecasts 0 pricePlans 0 currency</arg>
<arg>EUR</arg>
</arguments>
<status status="PASS" starttime="20200922 13:55:21.523" endtime="20200922 13:55:21.524"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body data forecasts 0 pricePlans 0 period</arg>
<arg>07.06.2020T22:00/1h</arg>
</arguments>
<status status="PASS" starttime="20200922 13:55:21.524" endtime="20200922 13:55:21.525"></status>
</kw>
<kw name="Number" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON number.*</doc>
<arguments>
<arg>response body data forecasts 0 pricePlans 0 rate</arg>
<arg>3.68</arg>
</arguments>
<status status="PASS" starttime="20200922 13:55:21.525" endtime="20200922 13:55:21.526"></status>
</kw>
<status status="PASS" starttime="20200922 13:55:21.102" endtime="20200922 13:55:21.526" critical="yes"></status>
</test>
<test id="s1-t7" name="fetch, 200, wrong product code">
<kw name="Get Body">
<assign>
<var>${body}</var>
</assign>
<kw name="Copy Dictionary" library="Collections">
<doc>Returns a copy of the given dictionary.</doc>
<arguments>
<arg>${BROKER_BODY}</arg>
<arg>deepcopy=True</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200922 13:55:21.527" level="INFO">${body} = {'timestamp': '2018-11-01T12:00:00+00:00', 'productCode': 'entsoe-electricity-price-product-code', 'parameters': {'period': '2020-06-08T13:00Z/2020-06-09T22:00Z', 'targetObject': '10YFI-1--------U'}}</msg>
<status status="PASS" starttime="20200922 13:55:21.527" endtime="20200922 13:55:21.527"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>time_zone=UTC</arg>
<arg>result_format=%Y-%m-%dT%H:%M:%S+00:00</arg>
</arguments>
<assign>
<var>${now}</var>
</assign>
<msg timestamp="20200922 13:55:21.527" level="INFO">${now} = 2020-09-22T10:55:21+00:00</msg>
<status status="PASS" starttime="20200922 13:55:21.527" endtime="20200922 13:55:21.527"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${body}</arg>
<arg>timestamp</arg>
<arg>${now}</arg>
</arguments>
<status status="PASS" starttime="20200922 13:55:21.527" endtime="20200922 13:55:21.528"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${body}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20200922 13:55:21.528" endtime="20200922 13:55:21.528"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.dumps(${body})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${json_string}</var>
</assign>
<msg timestamp="20200922 13:55:21.528" level="INFO">${json_string} = {"timestamp": "2020-09-22T10:55:21+00:00", "productCode": "entsoe-electricity-price-product-code", "parameters": {"period": "2020-06-08T13:00Z/2020-06-09T22:00Z", "targetObject": "10YFI-1--------U"}}</msg>
<status status="PASS" starttime="20200922 13:55:21.528" endtime="20200922 13:55:21.528"></status>
</kw>
<msg timestamp="20200922 13:55:21.528" level="INFO">${body} = {"timestamp": "2020-09-22T10:55:21+00:00", "productCode": "entsoe-electricity-price-product-code", "parameters": {"period": "2020-06-08T13:00Z/2020-06-09T22:00Z", "targetObject": "10YFI-1--------U"}}</msg>
<status status="PASS" starttime="20200922 13:55:21.526" endtime="20200922 13:55:21.528"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads('''${body}''')</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200922 13:55:21.529" level="INFO">${body} = {'timestamp': '2020-09-22T10:55:21+00:00', 'productCode': 'entsoe-electricity-price-product-code', 'parameters': {'period': '2020-06-08T13:00Z/2020-06-09T22:00Z', 'targetObject': '10YFI-1--------U'}}</msg>
<status status="PASS" starttime="20200922 13:55:21.529" endtime="20200922 13:55:21.529"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${body}</arg>
<arg>productCode=${PRODUCTCODE_WRONG}</arg>
</arguments>
<status status="PASS" starttime="20200922 13:55:21.529" endtime="20200922 13:55:21.529"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.dumps(${body})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200922 13:55:21.529" level="INFO">${body} = {"timestamp": "2020-09-22T10:55:21+00:00", "productCode": "entsoe-test", "parameters": {"period": "2020-06-08T13:00Z/2020-06-09T22:00Z", "targetObject": "10YFI-1--------U"}}</msg>
<status status="PASS" starttime="20200922 13:55:21.529" endtime="20200922 13:55:21.530"></status>
</kw>
<kw name="Fetch Data Product">
<arguments>
<arg>${body}</arg>
</arguments>
<kw name="Calculate Pot Signature" library="PoTLib">
<arguments>
<arg>${body}</arg>
<arg>${CLIENT_SECRET}</arg>
</arguments>
<assign>
<var>${signature}</var>
</assign>
<msg timestamp="20200922 13:55:21.530" level="INFO">KamM8IvY6f7VBrhvH10GaSFTdIcxzzFhu2z2mh/gSy8=</msg>
<msg timestamp="20200922 13:55:21.530" level="INFO">${signature} = KamM8IvY6f7VBrhvH10GaSFTdIcxzzFhu2z2mh/gSy8=</msg>
<status status="PASS" starttime="20200922 13:55:21.530" endtime="20200922 13:55:21.530"></status>
</kw>
<kw name="Set Headers" library="REST">
<tags>
<tag>settings</tag>
</tags>
<doc>*Sets new request headers or updates the existing.*</doc>
<arguments>
<arg>{"x-pot-signature": "${signature}", "x-app-token": "${APP_TOKEN}"}</arg>
</arguments>
<status status="PASS" starttime="20200922 13:55:21.530" endtime="20200922 13:55:21.531"></status>
</kw>
<kw name="Post" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a POST request to the endpoint.*</doc>
<arguments>
<arg>/translator/v1/fetch</arg>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200922 13:55:21.531" endtime="20200922 13:55:21.547"></status>
</kw>
<kw name="Output Schema" library="REST">
<tags>
<tag>I/O</tag>
</tags>
<doc>*Outputs JSON Schema to terminal or a file.*</doc>
<arguments>
<arg>response body</arg>
</arguments>
<msg timestamp="20200922 13:55:21.548" level="INFO">
{
    "type": "object",
    "properties": {
        "@context": {
            "type": "string",
            "default": "https://standards.oftrust.net/v2/Context/DataProductOutput/Forecast/Price/Electricity/"
        },
        "data": {
            "type": "object",
            "properties": {
                "forecasts": {
                    "type": "array",
                    "default": []
                }
            },
            "required": [
                "forecasts"
            ]
        },
        "signature": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string",
                    "default": "RsaSignature2018"
                },
                "created": {
                    "type": "string",
                    "default": "2020-09-22T10:55:21+00:00"
                },
                "creator": {
                    "type": "string",
                    "default": "http://localhost:8080/entsoe/translator/v1/public.key"
                },
                "signatureValue": {
                    "type": "string",
                    "default": "dJQgri7RDoraDopcOxhXO5Ul3Jj5vQPq7jpMGFYdToyWe6k9XvTz7FX4Mj3HpkUv9BRpzoISlWmLodgPOh6wSJLirVtiQVZrbmLUwcszsQrvlq932HmP2zJQxQijPKKv0lan2JGl/ROzj+TfhqNf7gbGPSHYHOeFulRbqKVlV6SvByKaopitiDbK4GIQOMbLxfM1hPV/DOcl6HAtCtLLV+hqBchNFRxxryyKWqYenHLpIK5S+ecYOB7eKefA+2DfB5PRBXFP96R9vteV8BxIhSx/RKWOB4/jgG1BOyazas9ICN2QN2SYJNaYaSixgHfyb98r8Z2MxSuhyu3k20WaZl+oV6424NYoy8VxpdYxVo1ELXhpplaZ/06YeNl2wiEPxGdGMj4a+zTNeynOYmEKPLMMqT4uuPKrsC9ykXYd+jNO+1ynvdsjDBJ/VXTyreyrB5Sx1E9KHhWXOo40MajU62F8CtRFS+Lh/9V1up7fAxjG1xrSVzD1qZC8e0XKYR99kGm+27e7Gq8/yvaJPxwJidU8srgS0QH08LkbEchuMlMWqNaG3CpsmPRGl94eeEmSculv3RFzBL5Qd3yRuiggZactmyzy0dMlZNKVc55AVQv3ptR0E5MJsFyY17XIMhGdm1Jtn5el74DOvD/FYAf85KGFqO4bVQPav742Qp8bGOo="
                }
            },
            "required": [
                "created",
                "creator",
                "signatureValue",
                "type"
            ]
        }
    },
    "required": [
        "@context",
        "data",
        "signature"
    ]
}</msg>
<status status="PASS" starttime="20200922 13:55:21.548" endtime="20200922 13:55:21.549"></status>
</kw>
<status status="PASS" starttime="20200922 13:55:21.530" endtime="20200922 13:55:21.549"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response status</arg>
<arg>200</arg>
</arguments>
<status status="PASS" starttime="20200922 13:55:21.550" endtime="20200922 13:55:21.550"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body @context</arg>
<arg>https://standards.oftrust.net/v2/Context/DataProductOutput/Forecast/Price/Electricity/</arg>
</arguments>
<status status="PASS" starttime="20200922 13:55:21.550" endtime="20200922 13:55:21.551"></status>
</kw>
<kw name="Object" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON object.*</doc>
<arguments>
<arg>response body data</arg>
</arguments>
<status status="PASS" starttime="20200922 13:55:21.551" endtime="20200922 13:55:21.551"></status>
</kw>
<kw name="Array" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON array.*</doc>
<arguments>
<arg>response body data forecasts</arg>
</arguments>
<status status="PASS" starttime="20200922 13:55:21.551" endtime="20200922 13:55:21.552"></status>
</kw>
<kw name="Output" library="REST">
<tags>
<tag>I/O</tag>
</tags>
<doc>*Outputs JSON to terminal or a file.*</doc>
<arguments>
<arg>response</arg>
</arguments>
<msg timestamp="20200922 13:55:21.552" level="INFO">
{
    "seconds": 0.013944000000000002,
    "status": 200,
    "body": {
        "@context": "https://standards.oftrust.net/v2/Context/DataProductOutput/Forecast/Price/Electricity/",
        "data": {
            "forecasts": []
        },
        "signature": {
            "type": "RsaSignature2018",
            "created": "2020-09-22T10:55:21+00:00",
            "creator": "http://localhost:8080/entsoe/translator/v1/public.key",
            "signatureValue": "dJQgri7RDoraDopcOxhXO5Ul3Jj5vQPq7jpMGFYdToyWe6k9XvTz7FX4Mj3HpkUv9BRpzoISlWmLodgPOh6wSJLirVtiQVZrbmLUwcszsQrvlq932HmP2zJQxQijPKKv0lan2JGl/ROzj+TfhqNf7gbGPSHYHOeFulRbqKVlV6SvByKaopitiDbK4GIQOMbLxfM1hPV/DOcl6HAtCtLLV+hqBchNFRxxryyKWqYenHLpIK5S+ecYOB7eKefA+2DfB5PRBXFP96R9vteV8BxIhSx/RKWOB4/jgG1BOyazas9ICN2QN2SYJNaYaSixgHfyb98r8Z2MxSuhyu3k20WaZl+oV6424NYoy8VxpdYxVo1ELXhpplaZ/06YeNl2wiEPxGdGMj4a+zTNeynOYmEKPLMMqT4uuPKrsC9ykXYd+jNO+1ynvdsjDBJ/VXTyreyrB5Sx1E9KHhWXOo40MajU62F8CtRFS+Lh/9V1up7fAxjG1xrSVzD1qZC8e0XKYR99kGm+27e7Gq8/yvaJPxwJidU8srgS0QH08LkbEchuMlMWqNaG3CpsmPRGl94eeEmSculv3RFzBL5Qd3yRuiggZactmyzy0dMlZNKVc55AVQv3ptR0E5MJsFyY17XIMhGdm1Jtn5el74DOvD/FYAf85KGFqO4bVQPav742Qp8bGOo="
        }
    },
    "headers": {
        "X-DNS-Prefetch-Control": "off",
        "X-Frame-Options": "SAMEORIGIN",
        "Strict-Transport-Security": "max-age=15552000; includeSubDomains",
        "X-Download-Options": "noopen",
        "X-Content-Type-Options": "nosniff",
        "X-XSS-Protection": "1; mode=block",
        "Content-Type": "application/json; charset=utf-8",
        "Content-Length": "973",
        "ETag": "W/\"3cd-wYnOz5t6SE0kAf4cBRFrxLVVH2E\"",
        "Vary": "Accept-Encoding",
        "Date": "Tue, 22 Sep 2020 10:55:21 GMT",
        "Connection": "keep-alive"
    }
}</msg>
<status status="PASS" starttime="20200922 13:55:21.552" endtime="20200922 13:55:21.553"></status>
</kw>
<status status="PASS" starttime="20200922 13:55:21.526" endtime="20200922 13:55:21.553" critical="yes"></status>
</test>
<status status="PASS" starttime="20200922 13:55:17.904" endtime="20200922 13:55:21.554"></status>
</suite>
<statistics>
<total>
<stat pass="7" fail="0">Critical Tests</stat>
<stat pass="7" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="7" fail="0" id="s1" name="Connector Tests">Connector Tests</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
