<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.8.5 on darwin)" generated="20200902 08:45:05.195" rpa="false">
<suite id="s1" name="Connector Tests" source="/Users/konstantinkomovits/PoT/connector-entsoe/robottests/connector_tests.robot">
<test id="s1-t1" name="fetch, 200">
<kw name="Get Body">
<assign>
<var>${body}</var>
</assign>
<kw name="Copy Dictionary" library="Collections">
<doc>Returns a copy of the given dictionary.</doc>
<arguments>
<arg>${BROKER_BODY}</arg>
<arg>deepcopy=True</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200902 08:45:05.433" level="INFO">${body} = {'timestamp': '2018-11-01T12:00:00+00:00', 'productCode': 'entsoe-electricity-price-product-code', 'parameters': {'period': '2020-06-08T13:00Z/2020-06-09T22:00Z', 'targetObject': '10YFI-1--------U'}}</msg>
<status status="PASS" starttime="20200902 08:45:05.432" endtime="20200902 08:45:05.433"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>time_zone=UTC</arg>
<arg>result_format=%Y-%m-%dT%H:%M:%S+00:00</arg>
</arguments>
<assign>
<var>${now}</var>
</assign>
<msg timestamp="20200902 08:45:05.433" level="INFO">${now} = 2020-09-02T05:45:05+00:00</msg>
<status status="PASS" starttime="20200902 08:45:05.433" endtime="20200902 08:45:05.433"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${body}</arg>
<arg>timestamp</arg>
<arg>${now}</arg>
</arguments>
<status status="PASS" starttime="20200902 08:45:05.433" endtime="20200902 08:45:05.433"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${body}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20200902 08:45:05.434" endtime="20200902 08:45:05.434"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.dumps(${body})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${json_string}</var>
</assign>
<msg timestamp="20200902 08:45:05.434" level="INFO">${json_string} = {"timestamp": "2020-09-02T05:45:05+00:00", "productCode": "entsoe-electricity-price-product-code", "parameters": {"period": "2020-06-08T13:00Z/2020-06-09T22:00Z", "targetObject": "10YFI-1--------U"}}</msg>
<status status="PASS" starttime="20200902 08:45:05.434" endtime="20200902 08:45:05.434"></status>
</kw>
<msg timestamp="20200902 08:45:05.434" level="INFO">${body} = {"timestamp": "2020-09-02T05:45:05+00:00", "productCode": "entsoe-electricity-price-product-code", "parameters": {"period": "2020-06-08T13:00Z/2020-06-09T22:00Z", "targetObject": "10YFI-1--------U"}}</msg>
<status status="PASS" starttime="20200902 08:45:05.432" endtime="20200902 08:45:05.434"></status>
</kw>
<kw name="Fetch Data Product">
<arguments>
<arg>${body}</arg>
</arguments>
<kw name="Calculate Pot Signature" library="PoTLib">
<arguments>
<arg>${body}</arg>
<arg>${CLIENT_SECRET}</arg>
</arguments>
<assign>
<var>${signature}</var>
</assign>
<msg timestamp="20200902 08:45:05.435" level="INFO">rrHL8g80qDDnfMavdYITPuPPIqf66UQgX5YiSsLjEPE=</msg>
<msg timestamp="20200902 08:45:05.435" level="INFO">${signature} = rrHL8g80qDDnfMavdYITPuPPIqf66UQgX5YiSsLjEPE=</msg>
<status status="PASS" starttime="20200902 08:45:05.435" endtime="20200902 08:45:05.435"></status>
</kw>
<kw name="Set Headers" library="REST">
<tags>
<tag>settings</tag>
</tags>
<doc>*Sets new request headers or updates the existing.*</doc>
<arguments>
<arg>{"x-pot-signature": "${signature}", "x-app-token": "${APP_TOKEN}"}</arg>
</arguments>
<status status="PASS" starttime="20200902 08:45:05.435" endtime="20200902 08:45:05.435"></status>
</kw>
<kw name="Post" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a POST request to the endpoint.*</doc>
<arguments>
<arg>/translator/v1/fetch</arg>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200902 08:45:05.436" endtime="20200902 08:45:05.820"></status>
</kw>
<kw name="Output Schema" library="REST">
<tags>
<tag>I/O</tag>
</tags>
<doc>*Outputs JSON Schema to terminal or a file.*</doc>
<arguments>
<arg>response body</arg>
</arguments>
<msg timestamp="20200902 08:45:05.821" level="INFO">
{
    "type": "object",
    "properties": {
        "@context": {
            "type": "string",
            "default": "https://standards.oftrust.net/v2/Context/DataProductOutput/Forecast/Price/Electricity/"
        },
        "data": {
            "type": "object",
            "properties": {
                "forecasts": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "@type": {
                                "type": "string"
                            },
                            "period": {
                                "type": "string"
                            },
                            "pricePlans": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "@type": {
                                            "type": "string"
                                        },
                                        "currency": {
                                            "type": "string"
                                        },
                                        "period": {
                                            "type": "string"
                                        },
                                        "rate": {
                                            "type": "number"
                                        }
                                    },
                                    "required": [
                                        "@type",
                                        "currency",
                                        "period",
                                        "rate"
                                    ]
                                }
                            }
                        },
                        "required": [
                            "@type",
                            "period",
                            "pricePlans"
                        ]
                    },
                    "default": [
                        {
                            "@type": "ForecastElectricityPriceMWH",
                            "period": "07.06.2020/09.06.2020",
                            "pricePlans": [
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "07.06.2020T22:00/1h",
                                    "rate": 3.68
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "07.06.2020T23:00/1h",
                                    "rate": 2.85
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T00:00/1h",
                                    "rate": 2.95
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T01:00/1h",
                                    "rate": 3.15
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T02:00/1h",
                                    "rate": 4.58
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T03:00/1h",
                                    "rate": 7.06
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T04:00/1h",
                                    "rate": 32.65
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T05:00/1h",
                                    "rate": 42.95
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T06:00/1h",
                                    "rate": 41.24
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T07:00/1h",
                                    "rate": 38.9
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T08:00/1h",
                                    "rate": 35.1
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T09:00/1h",
                                    "rate": 35.86
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T10:00/1h",
                                    "rate": 33.81
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T11:00/1h",
                                    "rate": 32.72
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T12:00/1h",
                                    "rate": 30.94
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T13:00/1h",
                                    "rate": 30
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T14:00/1h",
                                    "rate": 29.42
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T15:00/1h",
                                    "rate": 33.31
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T16:00/1h",
                                    "rate": 38.85
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T17:00/1h",
                                    "rate": 38.65
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T18:00/1h",
                                    "rate": 35.23
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T19:00/1h",
                                    "rate": 34.6
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T20:00/1h",
                                    "rate": 32.26
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T21:00/1h",
                                    "rate": 11.04
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T22:00/1h",
                                    "rate": 5.33
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T23:00/1h",
                                    "rate": 3.81
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T00:00/1h",
                                    "rate": 3.34
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T01:00/1h",
                                    "rate": 3.11
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T02:00/1h",
                                    "rate": 3.64
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T03:00/1h",
                                    "rate": 7.21
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T04:00/1h",
                                    "rate": 33.43
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T05:00/1h",
                                    "rate": 47.74
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T06:00/1h",
                                    "rate": 55.78
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T07:00/1h",
                                    "rate": 55.67
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T08:00/1h",
                                    "rate": 54.6
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T09:00/1h",
                                    "rate": 55.23
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T10:00/1h",
                                    "rate": 55.27
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T11:00/1h",
                                    "rate": 40.07
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T12:00/1h",
                                    "rate": 36.39
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T13:00/1h",
                                    "rate": 33.49
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T14:00/1h",
                                    "rate": 33.76
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T15:00/1h",
                                    "rate": 41.61
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T16:00/1h",
                                    "rate": 45.21
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T17:00/1h",
                                    "rate": 48.07
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T18:00/1h",
                                    "rate": 42.06
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T19:00/1h",
                                    "rate": 36.57
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T20:00/1h",
                                    "rate": 18.97
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T21:00/1h",
                                    "rate": 8.38
                                }
                            ]
                        }
                    ]
                }
            },
            "required": [
                "forecasts"
            ]
        },
        "signature": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string",
                    "default": "RsaSignature2018"
                },
                "created": {
                    "type": "string",
                    "default": "2020-09-02T05:45:05+00:00"
                },
                "creator": {
                    "type": "string",
                    "default": "http://localhost:8080/entsoe/translator/v1/public.key"
                },
                "signatureValue": {
                    "type": "string",
                    "default": "HwwQKGXaI/63yZk0Q8/Pv5TqVc/SLvzMYMZuyk264lULgdgt4BaHb5Fq+DMGJdJj9cyD0Iksp1F03e96NWr2XRa7LWJoMvtybujj4iCThVwj5q8i+0MObp3xGydqHGk0gbZxe99lvkjkF2Cx3VXwtc2QCyW7hv9jVMQB/HRciUC3T/dZlab+sK912i22DVfHZ//Y46PGaBgnVUFqLMZKX3pdQhYgR2rxG07OATZzA2t6oe1Dpx9uHlb7R2Wk9I6BwwEoZlLa99Udj7ivbFiz/rhsKQMfg0aGkBclqLwWM9KT6VMEz3JImSxn/gciIrYWYr1wFHblLVlodiPrye0AdJt5z5Tt2PhPV22nOgfrkVyb4mrrCPTy7qJtGIuBzPnoW4dHJxMZZ84iFRJDdOGggH7aJ+VEEvyCrah75j6yhKDi1pdTqdogGEp6Ak7i+qiLzo6fXJLu0gYv9miKeEIOEQzkOXst2MfRsRNOYjLy8q0XR/FUgSbCa3itPZTVaq1xtSTDjgFydlugkxwRzbxwBrXO3QluJRJzyDNiHXE+VSPP9nVtR9CRFxTLGY8OpJ56AQRnS6eW/1lavupMEBJGleNXCX85s9vQfHjGThkhzdbGqiiyf6YMvPbfkJiLK7IhH+BbdJZckOE8N2yIKwXI5vw5a8Mt95THYsHVbjzaZUw="
                }
            },
            "required": [
                "created",
                "creator",
                "signatureValue",
                "type"
            ]
        }
    },
    "required": [
        "@context",
        "data",
        "signature"
    ]
}</msg>
<status status="PASS" starttime="20200902 08:45:05.820" endtime="20200902 08:45:05.837"></status>
</kw>
<status status="PASS" starttime="20200902 08:45:05.434" endtime="20200902 08:45:05.837"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response status</arg>
<arg>200</arg>
</arguments>
<status status="PASS" starttime="20200902 08:45:05.837" endtime="20200902 08:45:05.838"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body @context</arg>
<arg>https://standards.oftrust.net/v2/Context/DataProductOutput/Forecast/Price/Electricity/</arg>
</arguments>
<status status="PASS" starttime="20200902 08:45:05.838" endtime="20200902 08:45:05.838"></status>
</kw>
<kw name="Object" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON object.*</doc>
<arguments>
<arg>response body data</arg>
</arguments>
<status status="PASS" starttime="20200902 08:45:05.838" endtime="20200902 08:45:05.840"></status>
</kw>
<kw name="Array" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON array.*</doc>
<arguments>
<arg>response body data forecasts</arg>
</arguments>
<status status="PASS" starttime="20200902 08:45:05.841" endtime="20200902 08:45:05.842"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body data forecasts 0 @type</arg>
<arg>ForecastElectricityPriceMWH</arg>
</arguments>
<status status="PASS" starttime="20200902 08:45:05.843" endtime="20200902 08:45:05.843"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body data forecasts 0 period</arg>
<arg>07.06.2020/09.06.2020</arg>
</arguments>
<status status="PASS" starttime="20200902 08:45:05.844" endtime="20200902 08:45:05.844"></status>
</kw>
<kw name="Array" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON array.*</doc>
<arguments>
<arg>response body data forecasts 0 pricePlans</arg>
</arguments>
<status status="PASS" starttime="20200902 08:45:05.844" endtime="20200902 08:45:05.847"></status>
</kw>
<kw name="Object" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON object.*</doc>
<arguments>
<arg>response body data forecasts 0 pricePlans 0</arg>
<arg>{"@type": "pricePlan","currency": "EUR","period": "07.06.2020T22:00/1h","rate": 3.68}</arg>
</arguments>
<status status="PASS" starttime="20200902 08:45:05.847" endtime="20200902 08:45:05.848"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body data forecasts 0 pricePlans 0 @type</arg>
<arg>pricePlan</arg>
</arguments>
<status status="PASS" starttime="20200902 08:45:05.848" endtime="20200902 08:45:05.849"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body data forecasts 0 pricePlans 0 currency</arg>
<arg>EUR</arg>
</arguments>
<status status="PASS" starttime="20200902 08:45:05.849" endtime="20200902 08:45:05.850"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body data forecasts 0 pricePlans 0 period</arg>
<arg>07.06.2020T22:00/1h</arg>
</arguments>
<status status="PASS" starttime="20200902 08:45:05.850" endtime="20200902 08:45:05.851"></status>
</kw>
<kw name="Number" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON number.*</doc>
<arguments>
<arg>response body data forecasts 0 pricePlans 0 rate</arg>
<arg>3.68</arg>
</arguments>
<status status="PASS" starttime="20200902 08:45:05.851" endtime="20200902 08:45:05.853"></status>
</kw>
<status status="PASS" starttime="20200902 08:45:05.432" endtime="20200902 08:45:05.853" critical="yes"></status>
</test>
<test id="s1-t2" name="fetch, 422, Missing data for parameters required field">
<kw name="Get Body">
<assign>
<var>${body}</var>
</assign>
<kw name="Copy Dictionary" library="Collections">
<doc>Returns a copy of the given dictionary.</doc>
<arguments>
<arg>${BROKER_BODY}</arg>
<arg>deepcopy=True</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200902 08:45:05.854" level="INFO">${body} = {'timestamp': '2018-11-01T12:00:00+00:00', 'productCode': 'entsoe-electricity-price-product-code', 'parameters': {'period': '2020-06-08T13:00Z/2020-06-09T22:00Z', 'targetObject': '10YFI-1--------U'}}</msg>
<status status="PASS" starttime="20200902 08:45:05.854" endtime="20200902 08:45:05.854"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>time_zone=UTC</arg>
<arg>result_format=%Y-%m-%dT%H:%M:%S+00:00</arg>
</arguments>
<assign>
<var>${now}</var>
</assign>
<msg timestamp="20200902 08:45:05.855" level="INFO">${now} = 2020-09-02T05:45:05+00:00</msg>
<status status="PASS" starttime="20200902 08:45:05.854" endtime="20200902 08:45:05.855"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${body}</arg>
<arg>timestamp</arg>
<arg>${now}</arg>
</arguments>
<status status="PASS" starttime="20200902 08:45:05.855" endtime="20200902 08:45:05.855"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${body}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20200902 08:45:05.855" endtime="20200902 08:45:05.855"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.dumps(${body})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${json_string}</var>
</assign>
<msg timestamp="20200902 08:45:05.856" level="INFO">${json_string} = {"timestamp": "2020-09-02T05:45:05+00:00", "productCode": "entsoe-electricity-price-product-code", "parameters": {"period": "2020-06-08T13:00Z/2020-06-09T22:00Z", "targetObject": "10YFI-1--------U"}}</msg>
<status status="PASS" starttime="20200902 08:45:05.855" endtime="20200902 08:45:05.856"></status>
</kw>
<msg timestamp="20200902 08:45:05.856" level="INFO">${body} = {"timestamp": "2020-09-02T05:45:05+00:00", "productCode": "entsoe-electricity-price-product-code", "parameters": {"period": "2020-06-08T13:00Z/2020-06-09T22:00Z", "targetObject": "10YFI-1--------U"}}</msg>
<status status="PASS" starttime="20200902 08:45:05.854" endtime="20200902 08:45:05.856"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads('''${body}''')</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200902 08:45:05.856" level="INFO">${body} = {'timestamp': '2020-09-02T05:45:05+00:00', 'productCode': 'entsoe-electricity-price-product-code', 'parameters': {'period': '2020-06-08T13:00Z/2020-06-09T22:00Z', 'targetObject': '10YFI-1--------U'}}</msg>
<status status="PASS" starttime="20200902 08:45:05.856" endtime="20200902 08:45:05.856"></status>
</kw>
<kw name="Pop From Dictionary" library="Collections">
<doc>Pops the given ``key`` from the ``dictionary`` and returns its value.</doc>
<arguments>
<arg>${body}</arg>
<arg>parameters</arg>
</arguments>
<status status="PASS" starttime="20200902 08:45:05.856" endtime="20200902 08:45:05.856"></status>
</kw>
<kw name="Fetch Data Product">
<arguments>
<arg>${body}</arg>
</arguments>
<kw name="Calculate Pot Signature" library="PoTLib">
<arguments>
<arg>${body}</arg>
<arg>${CLIENT_SECRET}</arg>
</arguments>
<assign>
<var>${signature}</var>
</assign>
<msg timestamp="20200902 08:45:05.857" level="INFO">+9Q0owSWqYl8a7BnaJv6Ry//UFF0qq3dMjxc7eZPM1A=</msg>
<msg timestamp="20200902 08:45:05.857" level="INFO">${signature} = +9Q0owSWqYl8a7BnaJv6Ry//UFF0qq3dMjxc7eZPM1A=</msg>
<status status="PASS" starttime="20200902 08:45:05.857" endtime="20200902 08:45:05.857"></status>
</kw>
<kw name="Set Headers" library="REST">
<tags>
<tag>settings</tag>
</tags>
<doc>*Sets new request headers or updates the existing.*</doc>
<arguments>
<arg>{"x-pot-signature": "${signature}", "x-app-token": "${APP_TOKEN}"}</arg>
</arguments>
<status status="PASS" starttime="20200902 08:45:05.857" endtime="20200902 08:45:05.857"></status>
</kw>
<kw name="Post" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a POST request to the endpoint.*</doc>
<arguments>
<arg>/translator/v1/fetch</arg>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200902 08:45:05.858" endtime="20200902 08:45:05.865"></status>
</kw>
<kw name="Output Schema" library="REST">
<tags>
<tag>I/O</tag>
</tags>
<doc>*Outputs JSON Schema to terminal or a file.*</doc>
<arguments>
<arg>response body</arg>
</arguments>
<msg timestamp="20200902 08:45:05.865" level="INFO">
{
    "type": "object",
    "properties": {
        "error": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "integer",
                    "default": 422
                },
                "message": {
                    "type": "object",
                    "properties": {
                        "parameters": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "default": [
                                "Missing data for required field."
                            ]
                        },
                        "parameters.targetObject": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "default": [
                                "Missing data for required field."
                            ]
                        },
                        "parameters.period": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "default": [
                                "Missing data for required field."
                            ]
                        }
                    },
                    "required": [
                        "parameters",
                        "parameters.period",
                        "parameters.targetObject"
                    ]
                }
            },
            "required": [
                "message",
                "status"
            ]
        }
    },
    "required": [
        "error"
    ]
}</msg>
<status status="PASS" starttime="20200902 08:45:05.865" endtime="20200902 08:45:05.866"></status>
</kw>
<status status="PASS" starttime="20200902 08:45:05.857" endtime="20200902 08:45:05.867"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response status</arg>
<arg>422</arg>
</arguments>
<status status="PASS" starttime="20200902 08:45:05.867" endtime="20200902 08:45:05.867"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response body error status</arg>
<arg>422</arg>
</arguments>
<status status="PASS" starttime="20200902 08:45:05.867" endtime="20200902 08:45:05.868"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body error message parameters 0</arg>
<arg>Missing data for required field.</arg>
</arguments>
<status status="PASS" starttime="20200902 08:45:05.868" endtime="20200902 08:45:05.868"></status>
</kw>
<status status="PASS" starttime="20200902 08:45:05.853" endtime="20200902 08:45:05.868" critical="yes"></status>
</test>
<test id="s1-t3" name="fetch, 422, missing period field in parameters">
<kw name="Get Body">
<assign>
<var>${body}</var>
</assign>
<kw name="Copy Dictionary" library="Collections">
<doc>Returns a copy of the given dictionary.</doc>
<arguments>
<arg>${BROKER_BODY}</arg>
<arg>deepcopy=True</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200902 08:45:05.869" level="INFO">${body} = {'timestamp': '2018-11-01T12:00:00+00:00', 'productCode': 'entsoe-electricity-price-product-code', 'parameters': {'period': '2020-06-08T13:00Z/2020-06-09T22:00Z', 'targetObject': '10YFI-1--------U'}}</msg>
<status status="PASS" starttime="20200902 08:45:05.869" endtime="20200902 08:45:05.869"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>time_zone=UTC</arg>
<arg>result_format=%Y-%m-%dT%H:%M:%S+00:00</arg>
</arguments>
<assign>
<var>${now}</var>
</assign>
<msg timestamp="20200902 08:45:05.870" level="INFO">${now} = 2020-09-02T05:45:05+00:00</msg>
<status status="PASS" starttime="20200902 08:45:05.869" endtime="20200902 08:45:05.870"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${body}</arg>
<arg>timestamp</arg>
<arg>${now}</arg>
</arguments>
<status status="PASS" starttime="20200902 08:45:05.870" endtime="20200902 08:45:05.870"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${body}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20200902 08:45:05.870" endtime="20200902 08:45:05.870"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.dumps(${body})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${json_string}</var>
</assign>
<msg timestamp="20200902 08:45:05.871" level="INFO">${json_string} = {"timestamp": "2020-09-02T05:45:05+00:00", "productCode": "entsoe-electricity-price-product-code", "parameters": {"period": "2020-06-08T13:00Z/2020-06-09T22:00Z", "targetObject": "10YFI-1--------U"}}</msg>
<status status="PASS" starttime="20200902 08:45:05.870" endtime="20200902 08:45:05.871"></status>
</kw>
<msg timestamp="20200902 08:45:05.871" level="INFO">${body} = {"timestamp": "2020-09-02T05:45:05+00:00", "productCode": "entsoe-electricity-price-product-code", "parameters": {"period": "2020-06-08T13:00Z/2020-06-09T22:00Z", "targetObject": "10YFI-1--------U"}}</msg>
<status status="PASS" starttime="20200902 08:45:05.869" endtime="20200902 08:45:05.871"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads('''${body}''')</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200902 08:45:05.872" level="INFO">${body} = {'timestamp': '2020-09-02T05:45:05+00:00', 'productCode': 'entsoe-electricity-price-product-code', 'parameters': {'period': '2020-06-08T13:00Z/2020-06-09T22:00Z', 'targetObject': '10YFI-1--------U'}}</msg>
<status status="PASS" starttime="20200902 08:45:05.871" endtime="20200902 08:45:05.872"></status>
</kw>
<kw name="Pop From Dictionary" library="Collections">
<doc>Pops the given ``key`` from the ``dictionary`` and returns its value.</doc>
<arguments>
<arg>${body["parameters"]}</arg>
<arg>period</arg>
</arguments>
<status status="PASS" starttime="20200902 08:45:05.872" endtime="20200902 08:45:05.872"></status>
</kw>
<kw name="Fetch Data Product">
<arguments>
<arg>${body}</arg>
</arguments>
<kw name="Calculate Pot Signature" library="PoTLib">
<arguments>
<arg>${body}</arg>
<arg>${CLIENT_SECRET}</arg>
</arguments>
<assign>
<var>${signature}</var>
</assign>
<msg timestamp="20200902 08:45:05.873" level="INFO">40H7Sp6f2UV4Skdu+NNokf3chYy/Yk+5JPSXcsKhDew=</msg>
<msg timestamp="20200902 08:45:05.873" level="INFO">${signature} = 40H7Sp6f2UV4Skdu+NNokf3chYy/Yk+5JPSXcsKhDew=</msg>
<status status="PASS" starttime="20200902 08:45:05.872" endtime="20200902 08:45:05.873"></status>
</kw>
<kw name="Set Headers" library="REST">
<tags>
<tag>settings</tag>
</tags>
<doc>*Sets new request headers or updates the existing.*</doc>
<arguments>
<arg>{"x-pot-signature": "${signature}", "x-app-token": "${APP_TOKEN}"}</arg>
</arguments>
<status status="PASS" starttime="20200902 08:45:05.873" endtime="20200902 08:45:05.873"></status>
</kw>
<kw name="Post" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a POST request to the endpoint.*</doc>
<arguments>
<arg>/translator/v1/fetch</arg>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200902 08:45:05.873" endtime="20200902 08:45:05.880"></status>
</kw>
<kw name="Output Schema" library="REST">
<tags>
<tag>I/O</tag>
</tags>
<doc>*Outputs JSON Schema to terminal or a file.*</doc>
<arguments>
<arg>response body</arg>
</arguments>
<msg timestamp="20200902 08:45:05.880" level="INFO">
{
    "type": "object",
    "properties": {
        "error": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "integer",
                    "default": 422
                },
                "message": {
                    "type": "object",
                    "properties": {
                        "parameters.period": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "default": [
                                "Missing data for required field."
                            ]
                        }
                    },
                    "required": [
                        "parameters.period"
                    ]
                }
            },
            "required": [
                "message",
                "status"
            ]
        }
    },
    "required": [
        "error"
    ]
}</msg>
<status status="PASS" starttime="20200902 08:45:05.880" endtime="20200902 08:45:05.881"></status>
</kw>
<status status="PASS" starttime="20200902 08:45:05.872" endtime="20200902 08:45:05.881"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response status</arg>
<arg>422</arg>
</arguments>
<status status="PASS" starttime="20200902 08:45:05.881" endtime="20200902 08:45:05.882"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response body error status</arg>
<arg>422</arg>
</arguments>
<status status="PASS" starttime="20200902 08:45:05.882" endtime="20200902 08:45:05.883"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body error message parameters.period 0</arg>
<arg>Missing data for required field.</arg>
</arguments>
<status status="PASS" starttime="20200902 08:45:05.883" endtime="20200902 08:45:05.883"></status>
</kw>
<status status="PASS" starttime="20200902 08:45:05.868" endtime="20200902 08:45:05.884" critical="yes"></status>
</test>
<test id="s1-t4" name="fetch, 422, missing targetObject field in parameters">
<kw name="Get Body">
<assign>
<var>${body}</var>
</assign>
<kw name="Copy Dictionary" library="Collections">
<doc>Returns a copy of the given dictionary.</doc>
<arguments>
<arg>${BROKER_BODY}</arg>
<arg>deepcopy=True</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200902 08:45:05.885" level="INFO">${body} = {'timestamp': '2018-11-01T12:00:00+00:00', 'productCode': 'entsoe-electricity-price-product-code', 'parameters': {'period': '2020-06-08T13:00Z/2020-06-09T22:00Z', 'targetObject': '10YFI-1--------U'}}</msg>
<status status="PASS" starttime="20200902 08:45:05.884" endtime="20200902 08:45:05.885"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>time_zone=UTC</arg>
<arg>result_format=%Y-%m-%dT%H:%M:%S+00:00</arg>
</arguments>
<assign>
<var>${now}</var>
</assign>
<msg timestamp="20200902 08:45:05.885" level="INFO">${now} = 2020-09-02T05:45:05+00:00</msg>
<status status="PASS" starttime="20200902 08:45:05.885" endtime="20200902 08:45:05.885"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${body}</arg>
<arg>timestamp</arg>
<arg>${now}</arg>
</arguments>
<status status="PASS" starttime="20200902 08:45:05.885" endtime="20200902 08:45:05.885"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${body}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20200902 08:45:05.886" endtime="20200902 08:45:05.886"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.dumps(${body})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${json_string}</var>
</assign>
<msg timestamp="20200902 08:45:05.886" level="INFO">${json_string} = {"timestamp": "2020-09-02T05:45:05+00:00", "productCode": "entsoe-electricity-price-product-code", "parameters": {"period": "2020-06-08T13:00Z/2020-06-09T22:00Z", "targetObject": "10YFI-1--------U"}}</msg>
<status status="PASS" starttime="20200902 08:45:05.886" endtime="20200902 08:45:05.886"></status>
</kw>
<msg timestamp="20200902 08:45:05.887" level="INFO">${body} = {"timestamp": "2020-09-02T05:45:05+00:00", "productCode": "entsoe-electricity-price-product-code", "parameters": {"period": "2020-06-08T13:00Z/2020-06-09T22:00Z", "targetObject": "10YFI-1--------U"}}</msg>
<status status="PASS" starttime="20200902 08:45:05.884" endtime="20200902 08:45:05.887"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads('''${body}''')</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200902 08:45:05.887" level="INFO">${body} = {'timestamp': '2020-09-02T05:45:05+00:00', 'productCode': 'entsoe-electricity-price-product-code', 'parameters': {'period': '2020-06-08T13:00Z/2020-06-09T22:00Z', 'targetObject': '10YFI-1--------U'}}</msg>
<status status="PASS" starttime="20200902 08:45:05.887" endtime="20200902 08:45:05.887"></status>
</kw>
<kw name="Pop From Dictionary" library="Collections">
<doc>Pops the given ``key`` from the ``dictionary`` and returns its value.</doc>
<arguments>
<arg>${body["parameters"]}</arg>
<arg>targetObject</arg>
</arguments>
<status status="PASS" starttime="20200902 08:45:05.887" endtime="20200902 08:45:05.888"></status>
</kw>
<kw name="Fetch Data Product">
<arguments>
<arg>${body}</arg>
</arguments>
<kw name="Calculate Pot Signature" library="PoTLib">
<arguments>
<arg>${body}</arg>
<arg>${CLIENT_SECRET}</arg>
</arguments>
<assign>
<var>${signature}</var>
</assign>
<msg timestamp="20200902 08:45:05.888" level="INFO">Vd9raNL3/BebI3HhnlrBNTUByKExcSUmCmBnGfK3sek=</msg>
<msg timestamp="20200902 08:45:05.888" level="INFO">${signature} = Vd9raNL3/BebI3HhnlrBNTUByKExcSUmCmBnGfK3sek=</msg>
<status status="PASS" starttime="20200902 08:45:05.888" endtime="20200902 08:45:05.888"></status>
</kw>
<kw name="Set Headers" library="REST">
<tags>
<tag>settings</tag>
</tags>
<doc>*Sets new request headers or updates the existing.*</doc>
<arguments>
<arg>{"x-pot-signature": "${signature}", "x-app-token": "${APP_TOKEN}"}</arg>
</arguments>
<status status="PASS" starttime="20200902 08:45:05.888" endtime="20200902 08:45:05.889"></status>
</kw>
<kw name="Post" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a POST request to the endpoint.*</doc>
<arguments>
<arg>/translator/v1/fetch</arg>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200902 08:45:05.889" endtime="20200902 08:45:05.896"></status>
</kw>
<kw name="Output Schema" library="REST">
<tags>
<tag>I/O</tag>
</tags>
<doc>*Outputs JSON Schema to terminal or a file.*</doc>
<arguments>
<arg>response body</arg>
</arguments>
<msg timestamp="20200902 08:45:05.896" level="INFO">
{
    "type": "object",
    "properties": {
        "error": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "integer",
                    "default": 422
                },
                "message": {
                    "type": "object",
                    "properties": {
                        "parameters.targetObject": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "default": [
                                "Missing data for required field."
                            ]
                        }
                    },
                    "required": [
                        "parameters.targetObject"
                    ]
                }
            },
            "required": [
                "message",
                "status"
            ]
        }
    },
    "required": [
        "error"
    ]
}</msg>
<status status="PASS" starttime="20200902 08:45:05.896" endtime="20200902 08:45:05.897"></status>
</kw>
<status status="PASS" starttime="20200902 08:45:05.888" endtime="20200902 08:45:05.897"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response status</arg>
<arg>422</arg>
</arguments>
<status status="PASS" starttime="20200902 08:45:05.897" endtime="20200902 08:45:05.898"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response body error status</arg>
<arg>422</arg>
</arguments>
<status status="PASS" starttime="20200902 08:45:05.898" endtime="20200902 08:45:05.898"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body error message parameters.targetObject 0</arg>
<arg>Missing data for required field.</arg>
</arguments>
<status status="PASS" starttime="20200902 08:45:05.898" endtime="20200902 08:45:05.899"></status>
</kw>
<status status="PASS" starttime="20200902 08:45:05.884" endtime="20200902 08:45:05.899" critical="yes"></status>
</test>
<test id="s1-t5" name="fetch, 200, period's first time parameter is bigger than second">
<kw name="Get Body">
<assign>
<var>${body}</var>
</assign>
<kw name="Copy Dictionary" library="Collections">
<doc>Returns a copy of the given dictionary.</doc>
<arguments>
<arg>${BROKER_BODY}</arg>
<arg>deepcopy=True</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200902 08:45:05.912" level="INFO">${body} = {'timestamp': '2018-11-01T12:00:00+00:00', 'productCode': 'entsoe-electricity-price-product-code', 'parameters': {'period': '2020-06-08T13:00Z/2020-06-09T22:00Z', 'targetObject': '10YFI-1--------U'}}</msg>
<status status="PASS" starttime="20200902 08:45:05.900" endtime="20200902 08:45:05.912"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>time_zone=UTC</arg>
<arg>result_format=%Y-%m-%dT%H:%M:%S+00:00</arg>
</arguments>
<assign>
<var>${now}</var>
</assign>
<msg timestamp="20200902 08:45:05.912" level="INFO">${now} = 2020-09-02T05:45:05+00:00</msg>
<status status="PASS" starttime="20200902 08:45:05.912" endtime="20200902 08:45:05.912"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${body}</arg>
<arg>timestamp</arg>
<arg>${now}</arg>
</arguments>
<status status="PASS" starttime="20200902 08:45:05.912" endtime="20200902 08:45:05.913"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${body}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20200902 08:45:05.913" endtime="20200902 08:45:05.913"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.dumps(${body})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${json_string}</var>
</assign>
<msg timestamp="20200902 08:45:05.913" level="INFO">${json_string} = {"timestamp": "2020-09-02T05:45:05+00:00", "productCode": "entsoe-electricity-price-product-code", "parameters": {"period": "2020-06-08T13:00Z/2020-06-09T22:00Z", "targetObject": "10YFI-1--------U"}}</msg>
<status status="PASS" starttime="20200902 08:45:05.913" endtime="20200902 08:45:05.913"></status>
</kw>
<msg timestamp="20200902 08:45:05.914" level="INFO">${body} = {"timestamp": "2020-09-02T05:45:05+00:00", "productCode": "entsoe-electricity-price-product-code", "parameters": {"period": "2020-06-08T13:00Z/2020-06-09T22:00Z", "targetObject": "10YFI-1--------U"}}</msg>
<status status="PASS" starttime="20200902 08:45:05.899" endtime="20200902 08:45:05.914"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads('''${body}''')</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200902 08:45:05.914" level="INFO">${body} = {'timestamp': '2020-09-02T05:45:05+00:00', 'productCode': 'entsoe-electricity-price-product-code', 'parameters': {'period': '2020-06-08T13:00Z/2020-06-09T22:00Z', 'targetObject': '10YFI-1--------U'}}</msg>
<status status="PASS" starttime="20200902 08:45:05.914" endtime="20200902 08:45:05.914"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${body["parameters"]}</arg>
<arg>period=${PERIOD_SWAP}</arg>
</arguments>
<status status="PASS" starttime="20200902 08:45:05.914" endtime="20200902 08:45:05.914"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.dumps(${body})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200902 08:45:05.915" level="INFO">${body} = {"timestamp": "2020-09-02T05:45:05+00:00", "productCode": "entsoe-electricity-price-product-code", "parameters": {"period": "2020-06-09T22:00Z/2020-06-08T13:00Z", "targetObject": "10YFI-1--------U"}}</msg>
<status status="PASS" starttime="20200902 08:45:05.914" endtime="20200902 08:45:05.915"></status>
</kw>
<kw name="Fetch Data Product">
<arguments>
<arg>${body}</arg>
</arguments>
<kw name="Calculate Pot Signature" library="PoTLib">
<arguments>
<arg>${body}</arg>
<arg>${CLIENT_SECRET}</arg>
</arguments>
<assign>
<var>${signature}</var>
</assign>
<msg timestamp="20200902 08:45:05.915" level="INFO">y45c+U7U8DbKmq9pmeMACxN68zTI/boS2Y/kSPVi4+k=</msg>
<msg timestamp="20200902 08:45:05.915" level="INFO">${signature} = y45c+U7U8DbKmq9pmeMACxN68zTI/boS2Y/kSPVi4+k=</msg>
<status status="PASS" starttime="20200902 08:45:05.915" endtime="20200902 08:45:05.915"></status>
</kw>
<kw name="Set Headers" library="REST">
<tags>
<tag>settings</tag>
</tags>
<doc>*Sets new request headers or updates the existing.*</doc>
<arguments>
<arg>{"x-pot-signature": "${signature}", "x-app-token": "${APP_TOKEN}"}</arg>
</arguments>
<status status="PASS" starttime="20200902 08:45:05.916" endtime="20200902 08:45:05.916"></status>
</kw>
<kw name="Post" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a POST request to the endpoint.*</doc>
<arguments>
<arg>/translator/v1/fetch</arg>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200902 08:45:05.916" endtime="20200902 08:45:06.243"></status>
</kw>
<kw name="Output Schema" library="REST">
<tags>
<tag>I/O</tag>
</tags>
<doc>*Outputs JSON Schema to terminal or a file.*</doc>
<arguments>
<arg>response body</arg>
</arguments>
<msg timestamp="20200902 08:45:06.245" level="INFO">
{
    "type": "object",
    "properties": {
        "@context": {
            "type": "string",
            "default": "https://standards.oftrust.net/v2/Context/DataProductOutput/Forecast/Price/Electricity/"
        },
        "data": {
            "type": "object",
            "properties": {
                "forecasts": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "@type": {
                                "type": "string"
                            },
                            "period": {
                                "type": "string"
                            },
                            "pricePlans": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "@type": {
                                            "type": "string"
                                        },
                                        "currency": {
                                            "type": "string"
                                        },
                                        "period": {
                                            "type": "string"
                                        },
                                        "rate": {
                                            "type": "number"
                                        }
                                    },
                                    "required": [
                                        "@type",
                                        "currency",
                                        "period",
                                        "rate"
                                    ]
                                }
                            }
                        },
                        "required": [
                            "@type",
                            "period",
                            "pricePlans"
                        ]
                    },
                    "default": [
                        {
                            "@type": "ForecastElectricityPriceMWH",
                            "period": "07.06.2020/09.06.2020",
                            "pricePlans": [
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "07.06.2020T22:00/1h",
                                    "rate": 3.68
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "07.06.2020T23:00/1h",
                                    "rate": 2.85
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T00:00/1h",
                                    "rate": 2.95
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T01:00/1h",
                                    "rate": 3.15
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T02:00/1h",
                                    "rate": 4.58
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T03:00/1h",
                                    "rate": 7.06
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T04:00/1h",
                                    "rate": 32.65
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T05:00/1h",
                                    "rate": 42.95
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T06:00/1h",
                                    "rate": 41.24
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T07:00/1h",
                                    "rate": 38.9
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T08:00/1h",
                                    "rate": 35.1
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T09:00/1h",
                                    "rate": 35.86
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T10:00/1h",
                                    "rate": 33.81
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T11:00/1h",
                                    "rate": 32.72
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T12:00/1h",
                                    "rate": 30.94
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T13:00/1h",
                                    "rate": 30
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T14:00/1h",
                                    "rate": 29.42
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T15:00/1h",
                                    "rate": 33.31
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T16:00/1h",
                                    "rate": 38.85
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T17:00/1h",
                                    "rate": 38.65
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T18:00/1h",
                                    "rate": 35.23
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T19:00/1h",
                                    "rate": 34.6
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T20:00/1h",
                                    "rate": 32.26
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T21:00/1h",
                                    "rate": 11.04
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T22:00/1h",
                                    "rate": 5.33
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "08.06.2020T23:00/1h",
                                    "rate": 3.81
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T00:00/1h",
                                    "rate": 3.34
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T01:00/1h",
                                    "rate": 3.11
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T02:00/1h",
                                    "rate": 3.64
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T03:00/1h",
                                    "rate": 7.21
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T04:00/1h",
                                    "rate": 33.43
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T05:00/1h",
                                    "rate": 47.74
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T06:00/1h",
                                    "rate": 55.78
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T07:00/1h",
                                    "rate": 55.67
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T08:00/1h",
                                    "rate": 54.6
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T09:00/1h",
                                    "rate": 55.23
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T10:00/1h",
                                    "rate": 55.27
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T11:00/1h",
                                    "rate": 40.07
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T12:00/1h",
                                    "rate": 36.39
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T13:00/1h",
                                    "rate": 33.49
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T14:00/1h",
                                    "rate": 33.76
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T15:00/1h",
                                    "rate": 41.61
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T16:00/1h",
                                    "rate": 45.21
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T17:00/1h",
                                    "rate": 48.07
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T18:00/1h",
                                    "rate": 42.06
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T19:00/1h",
                                    "rate": 36.57
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T20:00/1h",
                                    "rate": 18.97
                                },
                                {
                                    "@type": "pricePlan",
                                    "currency": "EUR",
                                    "period": "09.06.2020T21:00/1h",
                                    "rate": 8.38
                                }
                            ]
                        }
                    ]
                }
            },
            "required": [
                "forecasts"
            ]
        },
        "signature": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string",
                    "default": "RsaSignature2018"
                },
                "created": {
                    "type": "string",
                    "default": "2020-09-02T05:45:06+00:00"
                },
                "creator": {
                    "type": "string",
                    "default": "http://localhost:8080/entsoe/translator/v1/public.key"
                },
                "signatureValue": {
                    "type": "string",
                    "default": "lZ9a6r33xodaIt+nb2Ec9SCx8UgDuBbWaer4fmUwjygSgHFyNpDMTcio9V/9fmNuXkfmCMQyoQI19X9N2cd+/rqDoMaKIbf/K3JdhgnY3Ra1G041x/g3woNKJdyU5vtaoePIfCdh0jLZXszdjXHcZMSk49Z7QD6v9Hg1GKsYgfC4NHYqTqimDkIf24WNSUzRbDykDN/OCVGmHXbUrZ1ts+XamGgUX/0Sss3BHqBQvNo78Iqp1FsjoLbULbReW0cfp5+VB/TxjcCsajuga1ucOLwVMphG+aL00nSmiXRBJlh2+N5VLxc4W+Kfp5Ljo/yKa7YtMF6rKBElevkQIjortbco2x/WyDBE3OVGhIqHIU3AfcgBwafohmBh+TWcVQqFe6QAG17MeWFy3sEBhgvzdgmV/tX270fgD2M9Q17wv707XwlW8bncib+k/BE/g5YJKi8SMPZFGGtkDlIZRyq1BjFbmLh+YFhlgw8XRuGWoeaI4R814hq7Lg6N8TgXDOOchqCzyeJTBdTvP1DHa3eHI9jZ8VW8nonY6Z5DpJHFIt7LX8Ss5+Bi+CwW2YAylOHqNKW5yq5DhLtBxkzynOi8ZBD4t6DuXBQ7IN+9GuYSK984wGHVmlAc/i+L8H5kRWaVbsrX7b3JktYgO8Bs+tlBdX3Wqmo+0hIFDEjBEFXvS1E="
                }
            },
            "required": [
                "created",
                "creator",
                "signatureValue",
                "type"
            ]
        }
    },
    "required": [
        "@context",
        "data",
        "signature"
    ]
}</msg>
<status status="PASS" starttime="20200902 08:45:06.243" endtime="20200902 08:45:06.254"></status>
</kw>
<status status="PASS" starttime="20200902 08:45:05.915" endtime="20200902 08:45:06.255"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response status</arg>
<arg>200</arg>
</arguments>
<status status="PASS" starttime="20200902 08:45:06.255" endtime="20200902 08:45:06.255"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body @context</arg>
<arg>https://standards.oftrust.net/v2/Context/DataProductOutput/Forecast/Price/Electricity/</arg>
</arguments>
<status status="PASS" starttime="20200902 08:45:06.255" endtime="20200902 08:45:06.256"></status>
</kw>
<kw name="Object" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON object.*</doc>
<arguments>
<arg>response body data</arg>
</arguments>
<status status="PASS" starttime="20200902 08:45:06.256" endtime="20200902 08:45:06.258"></status>
</kw>
<kw name="Array" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON array.*</doc>
<arguments>
<arg>response body data forecasts</arg>
</arguments>
<status status="PASS" starttime="20200902 08:45:06.258" endtime="20200902 08:45:06.260"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body data forecasts 0 @type</arg>
<arg>ForecastElectricityPriceMWH</arg>
</arguments>
<status status="PASS" starttime="20200902 08:45:06.260" endtime="20200902 08:45:06.261"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body data forecasts 0 period</arg>
<arg>07.06.2020/09.06.2020</arg>
</arguments>
<status status="PASS" starttime="20200902 08:45:06.261" endtime="20200902 08:45:06.262"></status>
</kw>
<kw name="Array" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON array.*</doc>
<arguments>
<arg>response body data forecasts 0 pricePlans</arg>
</arguments>
<status status="PASS" starttime="20200902 08:45:06.262" endtime="20200902 08:45:06.265"></status>
</kw>
<kw name="Object" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON object.*</doc>
<arguments>
<arg>response body data forecasts 0 pricePlans 0</arg>
<arg>{"@type": "pricePlan","currency": "EUR","period": "07.06.2020T22:00/1h","rate": 3.68}</arg>
</arguments>
<status status="PASS" starttime="20200902 08:45:06.265" endtime="20200902 08:45:06.266"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body data forecasts 0 pricePlans 0 @type</arg>
<arg>pricePlan</arg>
</arguments>
<status status="PASS" starttime="20200902 08:45:06.266" endtime="20200902 08:45:06.267"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body data forecasts 0 pricePlans 0 currency</arg>
<arg>EUR</arg>
</arguments>
<status status="PASS" starttime="20200902 08:45:06.267" endtime="20200902 08:45:06.268"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body data forecasts 0 pricePlans 0 period</arg>
<arg>07.06.2020T22:00/1h</arg>
</arguments>
<status status="PASS" starttime="20200902 08:45:06.268" endtime="20200902 08:45:06.269"></status>
</kw>
<kw name="Number" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON number.*</doc>
<arguments>
<arg>response body data forecasts 0 pricePlans 0 rate</arg>
<arg>3.68</arg>
</arguments>
<status status="PASS" starttime="20200902 08:45:06.269" endtime="20200902 08:45:06.270"></status>
</kw>
<status status="PASS" starttime="20200902 08:45:05.899" endtime="20200902 08:45:06.270" critical="yes"></status>
</test>
<status status="PASS" starttime="20200902 08:45:05.197" endtime="20200902 08:45:06.271"></status>
</suite>
<statistics>
<total>
<stat pass="5" fail="0">Critical Tests</stat>
<stat pass="5" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="5" fail="0" id="s1" name="Connector Tests">Connector Tests</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
